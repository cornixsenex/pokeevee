

//Temp flags used to denote which poles are "active"
//Don't have enough temp flags so they are "reset" and reused when you move on to the next puzzle

//Pole Flags track the entire "puzzle" and are reset / reused on next puzzle
//First count all poles in L then R individual puzzles
//Pole Flags counted Left to Right then Top to Bottom in side L / R puzzle respectively
//Start 1 then go up

//VAR_TEMP_A will track which puzzle you're one
//    >Init on 0
//    >1 after first puzzle
//    >etc
   


mapscripts AedesLux_1F_MapScripts {


    MAP_SCRIPT_ON_TRANSITION {
        //Set initial Puzzle flags
        setflag (FLAG_TEMP_1)
        setflag (FLAG_TEMP_5)
        setflag (FLAG_TEMP_9)
        setflag (FLAG_TEMP_A)
    }

}

script AedesLux_Script_PoleDanger {
	msgbox (AedesLux_Text_PoleDanger)
	closemessage
	end
}

//Pole Scripts

script AedesLux_Script_Puzzle1L_Pole1 {
    //If already solved puzzle "It seems deactivated"
    if (var(VAR_TEMP_A) != 1) {
        msgbox (AedesLux_Text_PoleDeactivated)
        closemessage
        end
    }
    //Else tell if pole is on or off, ask if wanna flip switch 
	if (flag(FLAG_TEMP_1)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
    //If No - "Best Leave it alone" et release
	if (var(VAR_RESULT) == NO) {
		closemessage
		end
	} else {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_NORTH && flag(FLAG_TEMP_4)) {
			call (AedesLux_Script_PoleDanger)
		}
		if (var(VAR_RESULT) == DIR_WEST && flag(FLAG_TEMP_2)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Turn Pole on
		if (!flag(FLAG_TEMP_1) && (flag(FLAG_TEMP_2) || flag(FLAG_TEMP_4))) {
			setflag (FLAG_TEMP_1)
		//Turn Pole off
		} else {
			clearflag (FLAG_TEMP_1)
		}
		//Make sound
		playse (SE_M_THUNDERBOLT2)
		waitse
		call (AedesLux_Script_CheckSolvePuzzle1)
		call (AedesLux_Script_DrawPuzzle1)
	}
	end
}

//Reset Scripts

script AedesLux_Script_ResetPuzzle1L {
    //Wanna Reset Puzzle
    msgbox (AedesTerra_Text_ResetPuzzle, MSGBOX_YESNO)
    if (var(VAR_RESULT) == YES) {
        //Already Solved this floor's puzzle - just skip to save the headache say nah
        if (var(VAR_TEMP_A) != 0) {
			msgbox (AedesTerra_Text_CantReset)
			closemessage
        } else {
            //Reset Puzzle
            closemessage
			playse (SE_M_THUNDERBOLT2)
			waitse
            setflag (FLAG_TEMP_1)
            clearflag (FLAG_TEMP_2)
            clearflag (FLAG_TEMP_3)
            setflag (FLAG_TEMP_4)
            clearflag (FLAG_TEMP_5)
            call (AedesLux_Script_DrawPuzzle1)
        }
    } else {
        closemessage
    }
}

//Draw Puzzle Scripts

script AedesLux_Script_DrawPuzzle1 {
	//If you already solved the puzzle just return
	if (var(VAR_TEMP_A) != 0) {
		return
	}
	call (AedesLux_Script_DrawPuzzle1L)
	call (AedesLux_Script_DrawPuzzle1R)
    //Draw Map
    special (DrawWholeMapView)
	return
}

//For Every possible combination check if the flags are set, if they are show electricity, else show base
script AedesLux_Script_DrawPuzzle1L {
    //1 et 2
    if (flag(FLAG_TEMP_1) && flag(FLAG_TEMP_2)) {
        setmetatile (9, 41, METATILE_MauvilleGym_Wall_Electric_TopLeft, TRUE)
        setmetatile (10, 41, METATILE_MauvilleGym_WallSymbol_Electric_TopRight, TRUE)
        setmetatile (9, 42, METATILE_MauvilleGym_FloorTopShadow_Electric_BottomLeft, TRUE)
        setmetatile (10, 42, METATILE_MauvilleGym_FloorTopShadow_Electric_BottomRight, TRUE)
    } else {
        setmetatile (9, 41, METATILE_MauvilleGym_Wall, TRUE)
        setmetatile (10, 41, METATILE_MauvilleGym_WallSymbol, TRUE)
        setmetatile (9, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
        setmetatile (10, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
    }
    //1 et 4
    if (flag(FLAG_TEMP_1) && flag(FLAG_TEMP_4)) {
        setmetatile (8, 42, METATILE_MauvilleGym_FloorTopShadow_Pole_Electric, TRUE)
        setmetatile (8, 43, METATILE_MauvilleGym_Floor_ElectricV, TRUE)
        setmetatile (8, 44, METATILE_MauvilleGym_Floor_PoleTop, TRUE)
    } else {
        setmetatile (8, 42, METATILE_MauvilleGym_Floor_Pole, TRUE)
        setmetatile (8, 43, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (8, 44, METATILE_MauvilleGym_Floor_PoleTop, FALSE)
    }
    //2 et 3
    if (flag(FLAG_TEMP_2) && flag(FLAG_TEMP_3)) {
        setmetatile (12, 41, METATILE_MauvilleGym_Wall_Electric_TopLeft, TRUE)
        setmetatile (13, 41, METATILE_MauvilleGym_Wall_Electric_TopRight, TRUE)
        setmetatile (12, 42, METATILE_MauvilleGym_FloorTopShadow_Electric_BottomLeft, TRUE)
        setmetatile (13, 42, METATILE_MauvilleGym_FloorTopShadow_Electric_BottomRight, TRUE)
    } else {
        setmetatile (12, 41, METATILE_MauvilleGym_Wall, TRUE)
        setmetatile (13, 41, METATILE_MauvilleGym_Wall, TRUE)
        setmetatile (12, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
        setmetatile (13, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
    }
    //4 et 5
    if (flag(FLAG_TEMP_4) && flag(FLAG_TEMP_5)) {
        setmetatile (8, 45, METATILE_MauvilleGym_Floor_Pole_Electric, TRUE)
        setmetatile (8, 46, METATILE_MauvilleGym_Floor_ElectricV, TRUE)
        setmetatile (8, 47, METATILE_MauvilleGym_Floor_PoleTop, TRUE)
    } else {
        setmetatile (8, 45, METATILE_MauvilleGym_Floor_Pole, TRUE)
        setmetatile (8, 46, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (8, 47, METATILE_MauvilleGym_Floor_PoleTop, FALSE)
    }

	//Check Solution - Has to move into Pole scripts as CheckSolvePuzzle() calls this Draw Function - No LOOPS
	call (AedesLux_Script_CheckSolvePuzzle1)

    return
}

script AedesLux_Script_DrawPuzzle1R {
	//Placeholder

	return
}

//Check Solve Puzzle Scripts
script AedesLux_Script_CheckSolvePuzzle1 {
	//Check Left and Right
	if (flag(FLAG_TEMP_2) && flag(FLAG_TEMP_3) && flag(FLAG_TEMP_6) && flag(FLAG_TEMP_7)) {
		//alert player
		applymovement (LOCALID_PLAYER, Common_Movement_ExclamationMark)
		waitmovement (0)
		//play sound
		playse (SE_EFFECTIVE)
		waitse
		//clear all flags
		call (AedesLux_Script_ClearAllFlags)
		//open stairs
		setmetatile (16, 40, METATILE_MauvilleGym_StairsL, FALSE)
		setmetatile (17, 40, METATILE_MauvilleGym_StairsR, FALSE)
		setmetatile (16, 41, METATILE_MauvilleGym_StairsL, FALSE)
		setmetatile (17, 41, METATILE_MauvilleGym_StairsR, FALSE)
		setmetatile (16, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
		setmetatile (17, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
		//draw puzzle
		call (AedesLux_Script_DrawPuzzle1)
		//update var
		setvar (VAR_TEMP_A, 1)
		//setup next puzzle flags
		setflag (FLAG_TEMP_4)
		setflag (FLAG_TEMP_6)
		setflag (FLAG_TEMP_F)
		setflag (FLAG_TEMP_10)
		setflag (FLAG_TEMP_11)
	}

	return
}

//clear all flags utility script
script AedesLux_Script_ClearAllFlags {
	clearflag (FLAG_TEMP_1)
	clearflag (FLAG_TEMP_2)
	clearflag (FLAG_TEMP_3)
	clearflag (FLAG_TEMP_4)
	clearflag (FLAG_TEMP_5)
	clearflag (FLAG_TEMP_6)
	clearflag (FLAG_TEMP_7)
	clearflag (FLAG_TEMP_8)
	clearflag (FLAG_TEMP_9)
	clearflag (FLAG_TEMP_A)
	clearflag (FLAG_TEMP_B)
	clearflag (FLAG_TEMP_C)
	clearflag (FLAG_TEMP_D)
	clearflag (FLAG_TEMP_E)
	clearflag (FLAG_TEMP_F)
	clearflag (FLAG_TEMP_10)
	clearflag (FLAG_TEMP_11)
	clearflag (FLAG_TEMP_12)
	clearflag (FLAG_TEMP_13)
	clearflag (FLAG_TEMP_14)
	clearflag (FLAG_TEMP_15)
	clearflag (FLAG_TEMP_16)
	clearflag (FLAG_TEMP_17)
	clearflag (FLAG_TEMP_18)
	clearflag (FLAG_TEMP_19)
	return
}

text AedesLux_Text_PoleDeactivated {
    format("Nothing happened...")
}

text AedesLux_Text_PoleSwitch {
	format("Would you like to flip the switch?")
}

text AedesLux_Text_PoleOn {
	format("The pole is glowing with electricity.")
}

text AedesLux_Text_PoleOff {
	format("The pole seems to be deactivated.")
}

text AedesLux_Text_PoleDanger {
	format("This seems dangerous. Better leave it alone for now!")
}
