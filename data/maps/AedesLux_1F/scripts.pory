

//Temp flags used to denote which poles are "active"
//Don't have enough temp flags so they are "reset" and reused when you move on to the next puzzle

//Pole Flags track the entire "puzzle" and are reset / reused on next puzzle
//First count all poles in L then R individual puzzles
//Pole Flags counted Left to Right then Top to Bottom in side L / R puzzle respectively
//Start 1 then go up

//VAR_TEMP_A will track which puzzle you're one
//    >Init on 0
//    >1 after first puzzle
//    >etc
  

//VAR_TEMP_B will fire the 'solved puzzle' script 
//0 is just wait state
//set to 1 after solve 1
//ON frame 1 will be alert, show open stairs, deactivate puzzle 1, setup puzzle 2, and then update VAR_TEMP_A


mapscripts AedesLux_1F_MapScripts {


    MAP_SCRIPT_ON_TRANSITION {
        //Set initial Puzzle flags
        setflag (FLAG_TEMP_1)
        setflag (FLAG_TEMP_4)
        setflag (FLAG_TEMP_9)
        setflag (FLAG_TEMP_A)
    }

	MAP_SCRIPT_ON_FRAME_TABLE [
		VAR_TEMP_B, 1: AedesLux_Script_SolvedPuzzle
	]

}

script AedesLux_Script_SolvedPuzzle {
	//alert player
	applymovement (LOCALID_PLAYER, Common_Movement_ExclamationMark)
	waitmovement (0)
	//play sound
	playse (SE_EFFECTIVE)
	waitse
	//switch on which puzzle was solved
	//show appropriate open ladder
	//deactivate appropriate puzzle
	switch (var(VAR_TEMP_B)) {
		case 0:
			msgbox ("ERROR VAR_TEMP_B = 0")
			closemessage
			end
		case 1:
			//open ladder
			setmetatile (16, 40, METATILE_MauvilleGym_StairsL, FALSE)
			setmetatile (17, 40, METATILE_MauvilleGym_StairsR, FALSE)
			setmetatile (16, 41, METATILE_MauvilleGym_StairsL, FALSE)
			setmetatile (17, 41, METATILE_MauvilleGym_StairsR, FALSE)
			setmetatile (16, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
			setmetatile (17, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
			//Show open ladder
			special (DrawWholeMapView)
			//setup flags for next puzzle
			call (AedesLux_Script_ClearAllFlags)
			//L
			setflag (FLAG_TEMP_4)
			setflag (FLAG_TEMP_6)
			//R
			setflag (FLAG_TEMP_F)
			setflag (FLAG_TEMP_10)
			setflag (FLAG_TEMP_11)
			//setup Var_A for next puzzle
			setvar (VAR_TEMP_A, 1)
		case 2:
			//Finish Puzzle 2
		case 3:
			//Finish Puzzle 3
		default:
			msgbox ("ERROR VAR_TEMP_B OOB")
			closemessage
			end
	}
	//reset var B
	setvar (VAR_TEMP_B, 0)
	//fin
	end
}


//Pole Scripts

script AedesLux_Script_PoleDanger {
	msgbox (AedesLux_Text_PoleDanger)
	closemessage
	end
}

script AedesLux_Script_PoleDeactivated {
	msgbox (AedesLux_Text_PoleOff)
	closemessage
	end
}

script AedesLux_Script_PoleNothingHappened {
	msgbox (AedesLux_Text_NothingHappened)
	closemessage
	end
}

//1L
script AedesLux_Script_Puzzle1L_Pole1 {
    //Puzzle Already Solved 
    if (var(VAR_TEMP_A) != 0) {
		call (AedesLux_Script_PoleDeactivated)
    }
    //Check if Pole is currently On or Off
	if (flag(FLAG_TEMP_1)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
	//Only do something if player says YES otherwise just skip to fin
	if (var(VAR_RESULT) != NO) {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_NORTH && flag(FLAG_TEMP_4)) {
			call (AedesLux_Script_PoleDanger)
		}
		if (var(VAR_RESULT) == DIR_WEST && flag(FLAG_TEMP_2)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Turn Pole on
		if (!flag(FLAG_TEMP_1) && (flag(FLAG_TEMP_2) || flag(FLAG_TEMP_4))) {
			setflag (FLAG_TEMP_1)
		} else {
			//Trying to turn pole on but no adjacent power
			if (!flag(FLAG_TEMP_1)) {
				call (AedesLux_Script_PoleNothingHappened)
			} 
			//Switch Pole Off
			clearflag (FLAG_TEMP_1)
			//Check Adjacent Poles for lose power
			if (flag(FLAG_TEMP_2) && !flag(FLAG_TEMP_3)) {
				clearflag (FLAG_TEMP_2)
			}
			if (flag(FLAG_TEMP_4) && !flag(FLAG_TEMP_5)) {
				clearflag (FLAG_TEMP_4)
			}
		}
		//Update Puzzle
		call (AedesLux_Script_UpdatePuzzle)
	}
	//fin
	closemessage
	end
}

script AedesLux_Script_Puzzle1L_Pole2 {
    //Puzzle Already Solved 
    if (var(VAR_TEMP_A) != 0) {
		call (AedesLux_Script_PoleDeactivated)
    }
    //Check if Pole is currently On or Off
	if (flag(FLAG_TEMP_2)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
	//Only do something if player says YES otherwise just skip to fin
	if (var(VAR_RESULT) != NO) {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_EAST && flag(FLAG_TEMP_1)) {
			call (AedesLux_Script_PoleDanger)
		}
		if (var(VAR_RESULT) == DIR_WEST && flag(FLAG_TEMP_3)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Turn Pole on
		if (!flag(FLAG_TEMP_2) && (flag(FLAG_TEMP_1) || flag(FLAG_TEMP_3))) {
			setflag (FLAG_TEMP_2)
		} else {
			//Trying to turn pole on but no adjacent power
			if (!flag(FLAG_TEMP_2)) {
				call (AedesLux_Script_PoleNothingHappened)
			} 
			//Switch Pole Off
			clearflag (FLAG_TEMP_2)
			//Check Adjacent Poles for lose power
			if (flag(FLAG_TEMP_1) && !flag(FLAG_TEMP_4)) {
				clearflag (FLAG_TEMP_1)
			}
			//3 Cannot have power without 2 so
			clearflag (FLAG_TEMP_3)
		}
		//Update Puzzle
		call (AedesLux_Script_UpdatePuzzle)
	}
	//fin
	closemessage
	end
}

script AedesLux_Script_Puzzle1L_Pole3 {
    //Puzzle Already Solved 
    if (var(VAR_TEMP_A) != 0) {
		call (AedesLux_Script_PoleDeactivated)
    }
    //Check if Pole is currently On or Off
	if (flag(FLAG_TEMP_3)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
	//Only do something if player says YES otherwise just skip to fin
	if (var(VAR_RESULT) != NO) {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_EAST && flag(FLAG_TEMP_2)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Turn Pole on
		if (!flag(FLAG_TEMP_3) && flag(FLAG_TEMP_2)) {
			setflag (FLAG_TEMP_3)
		} else {
			//Trying to turn pole on but no adjacent power
			if (!flag(FLAG_TEMP_3)) {
				call (AedesLux_Script_PoleNothingHappened)
			} 
			//Switch Pole Off
			clearflag (FLAG_TEMP_3)
			//Check Adjacent Poles for lose power
			if (flag(FLAG_TEMP_2) && !flag(FLAG_TEMP_1)) {
				clearflag (FLAG_TEMP_2)
			}
		}
		//Update Puzzle
		call (AedesLux_Script_UpdatePuzzle)
	}
	//fin
	closemessage
	end
}

script AedesLux_Script_Puzzle1L_Pole4 {
    //Puzzle Already Solved 
    if (var(VAR_TEMP_A) != 0) {
		call (AedesLux_Script_PoleDeactivated)
    }
    //Check if Pole is currently On or Off
	if (flag(FLAG_TEMP_4)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
	//Only do something if player says YES otherwise just skip to fin
	if (var(VAR_RESULT) != NO) {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_NORTH && flag(FLAG_TEMP_5)) {
			call (AedesLux_Script_PoleDanger)
		}
		if (var(VAR_RESULT) == DIR_SOUTH && flag(FLAG_TEMP_1)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Turn Pole on
		if (!flag(FLAG_TEMP_4) && (flag(FLAG_TEMP_1) || flag(FLAG_TEMP_5))) {
			setflag (FLAG_TEMP_4)
		} else {
			//Trying to turn pole on but no adjacent power
			if (!flag(FLAG_TEMP_4)) {
				call (AedesLux_Script_PoleNothingHappened)
			} 
			//Switch Pole Off
			clearflag (FLAG_TEMP_4)
			//Check Adjacent Poles for lose power
			if (flag(FLAG_TEMP_1) && !flag(FLAG_TEMP_2)) {
				clearflag (FLAG_TEMP_1)
			}
			//5 needs 4 for power so power off
			clearflag (FLAG_TEMP_5)
		}
		//Update Puzzle
		call (AedesLux_Script_UpdatePuzzle)
	}
	//fin
	closemessage
	end
}

script AedesLux_Script_Puzzle1L_Pole5 {
    //Puzzle Already Solved 
    if (var(VAR_TEMP_A) != 0) {
		call (AedesLux_Script_PoleDeactivated)
    }
    //Check if Pole is currently On or Off
	if (flag(FLAG_TEMP_5)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
	//Only do something if player says YES otherwise just skip to fin
	if (var(VAR_RESULT) != NO) {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_SOUTH && flag(FLAG_TEMP_4)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Turn Pole on
		if (!flag(FLAG_TEMP_5) && flag(FLAG_TEMP_4)) {
			setflag (FLAG_TEMP_5)
		} else {
			//Trying to turn pole on but no adjacent power
			if (!flag(FLAG_TEMP_5)) {
				call (AedesLux_Script_PoleNothingHappened)
			} 
			//Switch Pole Off
			clearflag (FLAG_TEMP_5)
			//Check Adjacent Poles for lose power
			if (flag(FLAG_TEMP_4) && !flag(FLAG_TEMP_1)) {
				clearflag (FLAG_TEMP_4)
			}
		}
		//Update Puzzle
		call (AedesLux_Script_UpdatePuzzle)
	}
	//fin
	closemessage
	end
}

//1R

script AedesLux_Script_Puzzle1R_Pole6 {
    //Puzzle Already Solved 
    if (var(VAR_TEMP_A) != 0) {
		call (AedesLux_Script_PoleDeactivated)
    }
    //Check if Pole is currently On or Off
	if (flag(FLAG_TEMP_6)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
	//Only do something if player says YES otherwise just skip to fin
	if (var(VAR_RESULT) != NO) {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_NORTH && flag(FLAG_TEMP_7)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Turn Pole on
		if (!flag(FLAG_TEMP_6) && flag(FLAG_TEMP_7)) {
			setflag (FLAG_TEMP_6)
		} else {
			//Trying to turn pole on but no adjacent power
			if (!flag(FLAG_TEMP_6)) {
				call (AedesLux_Script_PoleNothingHappened)
			} 
			//Switch Pole Off
			clearflag (FLAG_TEMP_6)
			//Check Adjacent Poles for lose power
			if (flag(FLAG_TEMP_7) && !flag(FLAG_TEMP_8)) {
				clearflag (FLAG_TEMP_7)
			}
		}
		//Update Puzzle
		call (AedesLux_Script_UpdatePuzzle)
	}
	//fin
	closemessage
	end
}

script AedesLux_Script_Puzzle1R_Pole7 {
    //Puzzle Already Solved 
    if (var(VAR_TEMP_A) != 0) {
		call (AedesLux_Script_PoleDeactivated)
    }
    //Check if Pole is currently On or Off
	if (flag(FLAG_TEMP_7)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
	//Only do something if player says YES otherwise just skip to fin
	if (var(VAR_RESULT) != NO) {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_NORTH && flag(FLAG_TEMP_8)) {
			call (AedesLux_Script_PoleDanger)
		}
		if (var(VAR_RESULT) == DIR_SOUTH && flag(FLAG_TEMP_6)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Try turn Pole on
		if (!flag(FLAG_TEMP_7) && (flag(FLAG_TEMP_6) || flag(FLAG_TEMP_8))) {
			setflag (FLAG_TEMP_7)
		} else {
			//Trying to turn pole on but no adjacent power
			if (!flag(FLAG_TEMP_7)) {
				call (AedesLux_Script_PoleNothingHappened)
			} 
			//Switch Pole Off
			clearflag (FLAG_TEMP_7)
			//Check Adjacent Poles for lose power
			if (flag(FLAG_TEMP_8) && !flag(FLAG_TEMP_9)) {
				clearflag (FLAG_TEMP_8)
			}
			//6 cannot have power without 7 so clear it
			clearflag (FLAG_TEMP_6)
		}
		//Update Puzzle
		call (AedesLux_Script_UpdatePuzzle)
	}
	//fin
	closemessage
	end
}

script AedesLux_Script_Puzzle1R_Pole8 {
    //Puzzle Already Solved 
    if (var(VAR_TEMP_A) != 0) {
		call (AedesLux_Script_PoleDeactivated)
    }
    //Check if Pole is currently On or Off
	if (flag(FLAG_TEMP_8)) {
		msgbox (AedesLux_Text_PoleOn) //Pole is ON - Yes Electricity
	} else {
		msgbox (AedesLux_Text_PoleOff) //Pole is Off - No Electricity
	}
	msgbox (AedesLux_Text_PoleSwitch, MSGBOX_YESNO)
	//Only do something if player says YES otherwise just skip to fin
	if (var(VAR_RESULT) != NO) {
		//Check for pole danger
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_SOUTH && flag(FLAG_TEMP_7)) {
			call (AedesLux_Script_PoleDanger)
		}
		if (var(VAR_RESULT) == DIR_WEST && flag(FLAG_TEMP_9)) {
			call (AedesLux_Script_PoleDanger)
		}
		//No danger found - do switch
		//Try turn Pole on
		if (!flag(FLAG_TEMP_8) && (flag(FLAG_TEMP_7) || flag(FLAG_TEMP_9))) {
			setflag (FLAG_TEMP_8)
		} else {
			//Trying to turn pole on but no adjacent power
			if (!flag(FLAG_TEMP_8)) {
				call (AedesLux_Script_PoleNothingHappened)
			} 
			//Switch Pole Off
			clearflag (FLAG_TEMP_8)
			//Check Adjacent Poles for lose power
			if (flag(FLAG_TEMP_7) && !flag(FLAG_TEMP_6)) {
				clearflag (FLAG_TEMP_7)
			}
			if (flag(FLAG_TEMP_9) && !flag(FLAG_TEMP_A)) {
				clearflag (FLAG_TEMP_9)
			}
		}
		//Update Puzzle
		call (AedesLux_Script_UpdatePuzzle)
	}
	//fin
	closemessage
	end
}



//Reset Scripts

script AedesLux_Script_ResetPuzzle1L {
    //Wanna Reset Puzzle
    msgbox (AedesTerra_Text_ResetPuzzle, MSGBOX_YESNO)
    if (var(VAR_RESULT) == YES) {
        //Already Solved this floor's puzzle - just skip to save the headache say nah
        if (var(VAR_TEMP_A) != 0) {
			msgbox (AedesTerra_Text_CantReset)
			closemessage
        } else {
            //Reset Puzzle
            closemessage
			playse (SE_M_THUNDERBOLT2)
			waitse
            setflag (FLAG_TEMP_1)
            clearflag (FLAG_TEMP_2)
            clearflag (FLAG_TEMP_3)
            setflag (FLAG_TEMP_4)
            clearflag (FLAG_TEMP_5)
            call (AedesLux_Script_DrawPuzzle1)
        }
    } else {
        closemessage
    }
}

script AedesLux_Script_ResetPuzzle1R {
    //Wanna Reset Puzzle
    msgbox (AedesTerra_Text_ResetPuzzle, MSGBOX_YESNO)
    if (var(VAR_RESULT) == YES) {
        //Already Solved this floor's puzzle - just skip to save the headache say nah
        if (var(VAR_TEMP_A) != 0) {
			msgbox (AedesTerra_Text_CantReset)
			closemessage
        } else {
            //Reset Puzzle
            closemessage
			playse (SE_M_THUNDERBOLT2)
			waitse
			clearflag (FLAG_TEMP_6)
			clearflag (FLAG_TEMP_7)
			clearflag (FLAG_TEMP_8)
			setflag (FLAG_TEMP_9)
			setflag (FLAG_TEMP_A)
            call (AedesLux_Script_DrawPuzzle1)
        }
    } else {
        closemessage
    }
}

//Update Puzzle Script - Just save retyping the playse really
script AedesLux_Script_UpdatePuzzle {
	//play sound
	playse (SE_M_THUNDERBOLT2)
	waitse
	//switch on current puzzle
	switch (var(VAR_TEMP_A)) {
		//Draw current puzzle
		case 0:
			call (AedesLux_Script_DrawPuzzle1)
		case 1:
//			call (AedesLux_Script_DrawPuzzle2) PLACEHOLDER
		case 2:
//			call (AedesLux_Script_DrawPuzzle2) PLACEHOLDER
		case 3:
				msgbox("ERROR VAR_TEMP_A = 3")
				closemessage
				end
		default:
				msgbox("ERROR VAR_TEMP_A OOB")
				closemessage
				end
	}
	return
}
			

//Draw Puzzle Scripts
script AedesLux_Script_DrawPuzzle1 {
	//Check Solved puzzle
	call (AedesLux_Script_CheckSolvePuzzle1)
	call (AedesLux_Script_DrawPuzzle1L)
	call (AedesLux_Script_DrawPuzzle1R)
    //Draw Map
    special (DrawWholeMapView)
	return
}

//For Every possible combination check if the flags are set, if they are show electricity, else show base
script AedesLux_Script_DrawPuzzle1L {
    //1 et 2
    if (flag(FLAG_TEMP_1) && flag(FLAG_TEMP_2)) {
        setmetatile (9, 41, METATILE_MauvilleGym_Wall_Electric_TopLeft, TRUE)
        setmetatile (10, 41, METATILE_MauvilleGym_WallSymbol_Electric_TopRight, TRUE)
        setmetatile (9, 42, METATILE_MauvilleGym_FloorTopShadow_Electric_BottomLeft, TRUE)
        setmetatile (10, 42, METATILE_MauvilleGym_FloorTopShadow_Electric_BottomRight, TRUE)
    } else {
        setmetatile (9, 41, METATILE_MauvilleGym_Wall, TRUE)
        setmetatile (10, 41, METATILE_MauvilleGym_WallSymbol, TRUE)
        setmetatile (9, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
        setmetatile (10, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
    }
    //1 et 4
    if (flag(FLAG_TEMP_1) && flag(FLAG_TEMP_4)) {
        setmetatile (8, 42, METATILE_MauvilleGym_FloorTopShadow_Pole_Electric, TRUE)
        setmetatile (8, 43, METATILE_MauvilleGym_Floor_ElectricV, TRUE)
        setmetatile (8, 44, METATILE_MauvilleGym_Floor_PoleTop, TRUE)
    } else {
        setmetatile (8, 42, METATILE_MauvilleGym_FloorTopShadow_Pole, TRUE)
        setmetatile (8, 43, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (8, 44, METATILE_MauvilleGym_Floor_PoleTop, FALSE)
    }
    //2 et 3
    if (flag(FLAG_TEMP_2) && flag(FLAG_TEMP_3)) {	
        setmetatile (12, 41, METATILE_MauvilleGym_Wall_Electric_TopLeft, TRUE)
        setmetatile (13, 41, METATILE_MauvilleGym_Wall_Electric_TopRight, TRUE)
        setmetatile (12, 42, METATILE_MauvilleGym_FloorTopShadow_Electric_BottomLeft, TRUE)
        setmetatile (13, 42, METATILE_MauvilleGym_FloorTopShadow_Electric_BottomRight, TRUE)
    } else {
        setmetatile (12, 41, METATILE_MauvilleGym_Wall, TRUE)
        setmetatile (13, 41, METATILE_MauvilleGym_Wall, TRUE)
        setmetatile (12, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
        setmetatile (13, 42, METATILE_MauvilleGym_FloorTopShadow, FALSE)
    }
    //4 et 5
    if (flag(FLAG_TEMP_4) && flag(FLAG_TEMP_5)) {
        setmetatile (8, 45, METATILE_MauvilleGym_Floor_Pole_Electric, TRUE)
        setmetatile (8, 46, METATILE_MauvilleGym_Floor_ElectricV, TRUE)
        setmetatile (8, 47, METATILE_MauvilleGym_Floor_PoleTop, TRUE)
    } else {
        setmetatile (8, 45, METATILE_MauvilleGym_Floor_Pole, TRUE)
        setmetatile (8, 46, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (8, 47, METATILE_MauvilleGym_Floor_PoleTop, FALSE)
    }
    return
}

script AedesLux_Script_DrawPuzzle1R {
	//6 et 7
	if (flag(FLAG_TEMP_6) && flag(FLAG_TEMP_7)) {
		setmetatile (19, 42, METATILE_MauvilleGym_FloorTopShadow_Pole_Electric, TRUE)
        setmetatile (19, 43, METATILE_MauvilleGym_Floor_ElectricV, TRUE)
        setmetatile (19, 44, METATILE_MauvilleGym_Floor_PoleTop, TRUE)
    } else {
        setmetatile (19, 42, METATILE_MauvilleGym_FloorTopShadow_Pole, TRUE)
        setmetatile (19, 43, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (19, 44, METATILE_MauvilleGym_Floor_PoleTop, FALSE)
    }
	//7 et 8
	if (flag(FLAG_TEMP_7) && flag(FLAG_TEMP_8)) {
		setmetatile (19, 45, METATILE_MauvilleGym_Floor_Pole_Electric, TRUE)
        setmetatile (19, 46, METATILE_MauvilleGym_Floor_ElectricV, TRUE)
        setmetatile (19, 47, METATILE_MauvilleGym_Floor_PoleTop, TRUE)
    } else {
        setmetatile (19, 45, METATILE_MauvilleGym_Floor_Pole, TRUE)
        setmetatile (19, 46, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (19, 47, METATILE_MauvilleGym_Floor_PoleTop, FALSE)
    }
	//8 et 9
	if (flag(FLAG_TEMP_7) && flag(FLAG_TEMP_8)) {
		setmetatile (20, 47, METATILE_MauvilleGym_Floor_Electric_TopLeft, FALSE)
        setmetatile (21, 47, METATILE_MauvilleGym_Floor_Electric_TopRight, FALSE)
        setmetatile (20, 48, METATILE_MauvilleGym_Floor_Electric_BottomLeft, TRUE)
        setmetatile (21, 48, METATILE_MauvilleGym_Floor_Electric_BottomRight, TRUE)
	} else {
		setmetatile (20, 47, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (21, 47, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (20, 48, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (21, 48, METATILE_MauvilleGym_Floor, FALSE)
	}
	//9 et A
	if (flag(FLAG_TEMP_9) && flag(FLAG_TEMP_A)) {
		setmetatile (23, 47, METATILE_MauvilleGym_Floor_Electric_TopLeft, FALSE)
        setmetatile (24, 47, METATILE_MauvilleGym_Floor_Electric_TopRight, FALSE)
        setmetatile (23, 48, METATILE_MauvilleGym_Floor_Electric_BottomLeft, TRUE)
        setmetatile (24, 48, METATILE_MauvilleGym_Floor_Electric_BottomRight, TRUE)
	} else {
		setmetatile (23, 47, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (24, 47, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (23, 48, METATILE_MauvilleGym_Floor, FALSE)
        setmetatile (24, 48, METATILE_MauvilleGym_Floor, FALSE)
	}

	return
}

//Check Solve Puzzle Scripts - Changing to all poles activated
script AedesLux_Script_CheckSolvePuzzle1 {
	//Check all poles are setup
	if (flag(FLAG_TEMP_1) && 
			flag(FLAG_TEMP_2) && 
			flag(FLAG_TEMP_3) && 
			flag(FLAG_TEMP_4) && 
			flag(FLAG_TEMP_5) && 
			flag(FLAG_TEMP_6) && 
			flag(FLAG_TEMP_7) && 
			flag(FLAG_TEMP_8) && 
			flag(FLAG_TEMP_9) && 
			flag(FLAG_TEMP_A)) {
		//This var will fire the Show Solve Puzzle X script ON_FRAME
		setvar (VAR_TEMP_B, 1)
	}
	return
}

script AedesLux_Script_ClearAllFlags {
	clearflag (FLAG_TEMP_1)
	clearflag (FLAG_TEMP_2)
	clearflag (FLAG_TEMP_3)
	clearflag (FLAG_TEMP_4)
	clearflag (FLAG_TEMP_5)
	clearflag (FLAG_TEMP_6)
	clearflag (FLAG_TEMP_7)
	clearflag (FLAG_TEMP_8)
	clearflag (FLAG_TEMP_9)
	clearflag (FLAG_TEMP_A)
	clearflag (FLAG_TEMP_B)
	clearflag (FLAG_TEMP_C)
	clearflag (FLAG_TEMP_D)
	clearflag (FLAG_TEMP_E)
	clearflag (FLAG_TEMP_F)
	clearflag (FLAG_TEMP_10)
	clearflag (FLAG_TEMP_11)
	clearflag (FLAG_TEMP_12)
	clearflag (FLAG_TEMP_13)
	clearflag (FLAG_TEMP_14)
	clearflag (FLAG_TEMP_15)
	clearflag (FLAG_TEMP_16)
	clearflag (FLAG_TEMP_17)
	clearflag (FLAG_TEMP_18)
	clearflag (FLAG_TEMP_19)
	return
}

text AedesLux_Text_NothingHappened {
    format("Nothing happened...")
}

text AedesLux_Text_PoleSwitch {
	format("Would you like to flip the switch?")
}

text AedesLux_Text_PoleOn {
	format("The pole is glowing with electricity.")
}

text AedesLux_Text_PoleOff {
	format("The pole seems to be deactivated.")
}

text AedesLux_Text_PoleDanger {
	format("This seems dangerous. Better leave it alone for now!")
}
