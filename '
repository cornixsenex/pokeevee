
//Cashier
const CHECK_COINS = VAR_TEMP_6

//used in all games
const WAGER = VAR_TEMP_0
const WAGER_REFUND = FLAG_TEMP_C //when set give refund in End script

//Blue Roulette vars
const WAGER_TYPE = VAR_TEMP_1
const WAGER_NUMBER = VAR_TEMP_2 //Specific number chosen to wager on 0-30 all match. 31 is 00
const WAGER_RANGE = VAR_TEMP_3  //Specific Range on a range wager
const WAGER_COLOR = VAR_TEMP_4  //Specific color on a color wager
const SPIN_RESULT = VAR_TEMP_5

//HI LO KABUTO STUFF
const DEALER_CARD = VAR_TEMP_7
const PLAYER_CARD = VAR_TEMP_8
const OPPONENT_CARD_1 = VAR_TEMP_9
const OPPONENT_CARD_2 = VAR_TEMP_A
const OPPONENT_CARD_3 = VAR_TEMP_B
const OPPONENT_CARD_4 = VAR_TEMP_C
const CARD1       = FLAG_TEMP_1
const CARD2       = FLAG_TEMP_2
const CARD3       = FLAG_TEMP_3
const CARD4       = FLAG_TEMP_4
const CARD5       = FLAG_TEMP_5
const CARD6       = FLAG_TEMP_6
const CARD7       = FLAG_TEMP_7
const CARD8       = FLAG_TEMP_8
const CARD9       = FLAG_TEMP_9
const CARD0       = FLAG_TEMP_A
const KABUTOHI    = FLAG_TEMP_B

//Trigger Cornelius script
const TRIGGER_LOGISTICS_SCENE = VAR_TEMP_D //0: Nah
                                           //1: Top L
                                           //2: Top R
                                           //3: Bot R
const OBJ_EVENT_CORNELIUS = 7


mapscripts Peccadum_PalatiumFelix_MapScripts {



}

script Peccadum_PalatiumFelix_Script_Cashier {
	lock
	faceplayer
	//reset CHECK_COINS just in case idk
	setvar (CHECK_COINS, 0)
	showmoneybox (18, 0)
	showcoinsbox (21, 6)
	msgbox (Peccadum_PalatiumFelix_Text_Cashier)
	closemessage
	multichoice (0, 0, MULTI_PALATIUM_FELIX_CASHIER, TRUE)
	switch (var(VAR_RESULT)) {
		//Buy Coins
		case 0:
			call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
		//Sell Coins
		case 1:
			call (Peccadum_PalatiumFelix_Script_CashierSellCoins)
		case 2:
			call (Peccadum_PalatiumFelix_Script_CashierBye)
		//Exit
		default:
			msgbox ("ERROR\n VAR_RESULT OOB Cashier")
			closemessage
			release
			end
	}
	call (Peccadum_PalatiumFelix_Script_CashierBye)
}

script Peccadum_PalatiumFelix_Script_CashierBye {
	//thank you come againa
	hidemoneybox
	hidecoinsbox (21, 6)
	msgbox (Peccadum_PalatiumFelix_Text_CashierBye)
	closemessage
	release
	end
}

script Peccadum_PalatiumFelix_Script_CashierBuyCoins {
	//explain coins - price etc
	//how many would you like to purchase
	msgbox (Peccadum_PalatiumFelix_Text_CashierPurchase)
	closemessage
	checkcoins (CHECK_COINS)
	//multichoice
	setvar (VAR_0x8004, SCROLL_MULTI_PALATIUM_FELIX_COIN_CASHIER)
	special (ShowScrollableMultichoice)
	waitstate
	//prevent coin_case overflow
	switch (var(VAR_RESULT)) {
		//1
		case 0:
			if (var(CHECK_COINS) < 9999) {
				checkmoney (100)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (100)
					addcoins (1)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					return
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				return
			}
		//5
		case 1:
			if (var(CHECK_COINS) < 9995) {
				checkmoney (500)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (500)
					addcoins (5)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//10
		case 2:
			if (var(CHECK_COINS) < 9990) {
				checkmoney (1000)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (1000)
					addcoins (10)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//25
		case 3:
			if (var(CHECK_COINS) < 9975) {
				checkmoney (2500)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (2500)
					addcoins (25)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//50
		case 4:
			if (var(CHECK_COINS) < 9950) {
				checkmoney (5000)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (5000)
					addcoins (50)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//100
		case 5:
			if (var(CHECK_COINS) < 9900) {
				checkmoney (10000)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (10000)
					addcoins (100)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//250
		case 6:
			if (var(CHECK_COINS) < 9750) {
				checkmoney (25000)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (25000)
					addcoins (250)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//500
		case 7:
			if (var(CHECK_COINS) < 9500) {
				checkmoney (50000)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (50000)
					addcoins (500)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//1000
		case 8:
			if (var(CHECK_COINS) < 9000) {
				checkmoney (100000)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (100000)
					addcoins (1000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//2500
		case 9:
			if (var(CHECK_COINS) < 7500) {
				checkmoney (250000)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (250000)
					addcoins (2500)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//5000
		case 10:
			if (var(CHECK_COINS) < 5000) {
				checkmoney (500000)
				if (var(VAR_RESULT) == TRUE) {
					removemoney (500000)
					addcoins (5000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				} else {
					msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney)
					call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
				}
			} else {
				msgbox (Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins)
				call (Peccadum_PalatiumFelix_Script_CashierBuyCoins)
			}
		//nvm
		case 11:
			return
		default:
			msgbox("ERROR\nVARRESULT OOB BuyCoins")
			closemessage
			release
			end
	}
	//Here are you coins
	msgbox (Peccadum_PalatiumFelix_Text_CashierTakeCoins)
	call (Peccadum_PalatiumFelix_Script_CashierBye)
}

script Peccadum_PalatiumFelix_Script_CashierSellCoins {
	//explain coins - price etc - how many you want to sell?
	msgbox (Peccadum_PalatiumFelix_Text_CashierSell)
	closemessage
	checkcoins (CHECK_COINS)
	//multichoice
	setvar (VAR_0x8004, SCROLL_MULTI_PALATIUM_FELIX_COIN_CASHIER)
	special (ShowScrollableMultichoice)
	waitstate
	//prevent money overflow
	switch (var(VAR_RESULT)) {
		//1
		case 0:
			//check coins
			if (var(CHECK_COINS) > 0) { //YES enough coins
				checkmoney (999900)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					return
				} else { //YES Room for money
					removecoins (1)
					addmoney (100)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				return
			}
		//5
		case 1:
			//check coins
			if (var(CHECK_COINS) > 4) { //YES enough coins
				checkmoney (999500)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (5)
					addmoney (500)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//10
		case 2:
			//check coins
			if (var(CHECK_COINS) > 9) { //YES enough coins
				checkmoney (998000)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (10)
					addmoney (1000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//25
		case 3:
			//check coins
			if (var(CHECK_COINS) > 24) { //YES enough coins
				checkmoney (997500)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (25)
					addmoney (2500)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//50
		case 4:
			//check coins
			if (var(CHECK_COINS) > 49) { //YES enough coins
				checkmoney (995000)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (50)
					addmoney (5000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//100
		case 5:
			//check coins
			if (var(CHECK_COINS) > 99) { //YES enough coins
				checkmoney (990000)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (100)
					addmoney (10000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//250
		case 6:
			//check coins
			if (var(CHECK_COINS) > 249) { //YES enough coins
				checkmoney (975000)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (250)
					addmoney (25000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//500
		case 7:
			//check coins
			if (var(CHECK_COINS) > 499) { //YES enough coins
				checkmoney (950000)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (500)
					addmoney (50000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//1000
		case 8:
			//check coins
			if (var(CHECK_COINS) > 999) { //YES enough coins
				checkmoney (900000)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (1000)
					addmoney (100000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//2500
		case 9:
			//check coins
			if (var(CHECK_COINS) > 2499) { //YES enough coins
				checkmoney (750000)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (2500)
					addmoney (250000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//5000
		case 10:
			//check coins
			if (var(CHECK_COINS) > 4999) { //YES enough coins
				checkmoney (500000)
				if (var(VAR_RESULT) == TRUE) { //NO Room for money
					msgbox (Peccadum_PalatiumFelix_Text_CashierTooMuchMoney)
					call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
				} else { //YES Room for money
					removecoins (5000)
					addmoney (500000)
					call (Peccadum_PalatiumFelix_Script_CashierUpdateTransaction)
				}
			} else { //NOT enough coins
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call  (Peccadum_PalatiumFelix_Script_CashierSellCoins)
			}
		//nvm
		case 11:
			return
		default:
			msgbox("ERROR, VAR_RESULT OOB SellCoins")
			closemessage
			release
			end
	}
	//There is your money
	msgbox (Peccadum_PalatiumFelix_Text_CashierTakeMoney)
	call (Peccadum_PalatiumFelix_Script_CashierBye)
}

script Peccadum_PalatiumFelix_Script_CashierUpdateTransaction {

	updatemoneybox
	updatecoinsbox (1, 6)
	playse (SE_SHOP)
	waitse
	return
}

script Peccadum_PalatiumFelix_Script_BlueRouletteDealer {
    lock
    faceplayer
    //Hello I am the roulette dealer
    msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteDealerIntro)
    //if broke tell you to get coins
    checkcoins (CHECK_COINS)
    if (var(CHECK_COINS) < 5) {
        msgbox (Peccadum_PalatiumFelix_Text_NoCoins)
        call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
    }
    //wanna play?
    msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteDealerBegin, MSGBOX_YESNO)
    if (var(VAR_RESULT) == FALSE) {
        call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
    } else {
        call (Peccadum_PalatiumFelix_Script_BlueRouletteBrain)
    }
}

script Peccadum_PalatiumFelix_Script_BlueRouletteBrain {
    //How much will you wager
    call (Peccadum_PalatiumFelix_Script_GetCoinWager)
    //What type of wager (Num, color, range)
	call (Peccadum_PalatiumFelix_Script_BlueRouletteGetWagerType)
    //Confirm type and select specific wager (which num, which color, what range)
	switch (var(WAGER_TYPE)) {
		case 0:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetNumberWager)
		case 1:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager)
		case 2:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
		case 3:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
		default:
			msgbox ("ERROR\nWAGER_TYPE OOB")
			closemessage
			release
			end
	}
    //good luck
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGoodLuck)
	closemessage
	//clear wager refund - wager is commited
	clearflag (WAGER_REFUND)
	applymovement (VAR_LAST_TALKED, Common_Movement_FaceDown)
	waitmovement (0)
	playse (SE_ROULETTE_BALL)
	waitse
    //spin - should have something fun happen here, SE, a nice graphic idk
	specialvar (SPIN_RESULT, BlueRouletteSpin)
	playse (SE_ROULETTE_BALL2)
	waitse
    //announce spin
	applymovement (VAR_LAST_TALKED, Common_Movement_ExclamationMark)
	waitmovement (0)
	buffernumberstring (STR_VAR_1, SPIN_RESULT)
	if (var(SPIN_RESULT) < 31) {
		msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteAnnounceSpin)
	} else {
		msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteAnnounce00)
	}
	faceplayer
    //check if win or lose
	call (Peccadum_PalatiumFelix_Script_BlueRouletteCheckWin)
	//rest handled from Win or Lose
}

script Peccadum_PalatiumFelix_Script_GetCoinWager {
	//set wager refund
	if (!flag(WAGER_REFUND)) {
		setflag (WAGER_REFUND)
	}
    //reset wager
	setvar (WAGER, 0)
    //show coin box
	showcoinsbox (21, 1)
    //msgbox What is your wager?
	msgbox (SaltySpitoon_Text_HiLoKabuto_GetWager)
    closemessage
    multichoice (0, 0, MULTI_GET_COIN_WAGER, TRUE)
    copyvar (WAGER, VAR_RESULT)
	checkcoins (VAR_RESULT)
    switch (var(WAGER)) {
		//0: 5
		case 0:
			if (var(VAR_RESULT) >= 5) {
				removecoins (5)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 5)
				return
			} else {
				clearflag (WAGER_REFUND)
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
			}
		//1: 25
		case 1:
			if (var(VAR_RESULT) >= 25) {
				removecoins (25)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 25)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		//2: 100
		case 2:
			if (var(VAR_RESULT) >= 100) {
				removecoins (100)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 100)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		//3: 500
		case 3:
			if (var(VAR_RESULT) >= 500) {
				removecoins (500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 500)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		//4: 1000
		case 4:
			if (var(VAR_RESULT) >= 1000) {
				removecoins (1000)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 1000)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		//5: 2500
		case 5:
			if (var(VAR_RESULT) >= 2500) {
				removecoins (2500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 2500)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		case 6:
			clearflag (WAGER_REFUND)
			hidecoinsbox (21, 1)
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
	}
	msgbox("ERROR\nBottom of GetCoinWager")
	closemessage
	release
	end
}

script Peccadum_PalatiumFelix_Script_BlueRouletteGetWagerType {
	//reset wager type
	setvar (WAGER_TYPE, 0)
	//msgbox What type of wager will you be making
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGetWagerType)
	closemessage
	multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_WAGER_TYPE, TRUE)
	copyvar (WAGER_TYPE, VAR_RESULT)
	//confirm wager type or exit on NVM
	switch (var(WAGER_TYPE)) {
		//Num
		case 0:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmNumberWager, MSGBOX_YESNO)
		//Color
		case 1:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorWager, MSGBOX_YESNO)
		//Range
		case 2:	
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRangeWager, MSGBOX_YESNO)
		//NVM
		case 3:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
	}
	if (var(VAR_RESULT) == YES) {
			return
		} else {
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetWagerType)
		}
}

script Peccadum_PalatiumFelix_Script_BlueRouletteGetNumberWager {
	//reset range wager
	setvar (WAGER_RANGE, 0)
	//reset number wager
	setvar (WAGER_NUMBER, 0)
	//what number will you bet - Tell us where 0 and 00 are plsa
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGetNumberWager)
	closemessage
	//Determine Range (0-00), (1-10), (11-20), (21-31), NVM
	multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_WAGER_RANGE, TRUE)
	copyvar (WAGER_RANGE, VAR_RESULT)
	msgbox ("SPECIFIC NUM")
	closemessage
	//Then secondary multi (selection within the range you just selected) - assign WAGER_NUMBER based on selection and range
	switch (var(WAGER_RANGE)) {
		//0 et 00
		case 0:
			multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_RANGE_0_NUMBER, TRUE)
			switch (var(VAR_RESULT)) {
				case 0 :
					setvar (WAGER_NUMBER, 0)
				case 1:
					setvar (WAGER_NUMBER, 31)
				case 2:
					call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
				default:
					msgbox ("ERROR\nOOB return from\nROULETTE_RANGE_0_NUMBER")
					closemessage
					release
					end
			}
		//1 - 10
		case 1:
			msgbox ("CASE 1")
			closemessage
			setvar (VAR_0x8004, SCROLL_MULTI_GET_BLUE_ROULETTE_RANGE_1_NUMBER)
			special (ShowScrollableMultichoice)
			waitstate
			switch (var(VAR_RESULT)) {
				case 0 :
					setvar (WAGER_NUMBER, 1)
				case 1:
					setvar (WAGER_NUMBER, 2)
				case 2:
					setvar (WAGER_NUMBER, 3)
				case 3:
					setvar (WAGER_NUMBER, 4)
				case 4:
					setvar (WAGER_NUMBER, 5)
				case 5:
					setvar (WAGER_NUMBER, 6)
				case 6:
					setvar (WAGER_NUMBER, 7)
				case 7:
					setvar (WAGER_NUMBER, 8)
				case 8:
					setvar (WAGER_NUMBER, 9)
				case 9:
					setvar (WAGER_NUMBER, 10)
				case 10:
					call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
				default:
					msgbox ("ERROR\nOOB return from\nROULETTE_RANGE_1_NUMBER")
					closemessage
					release
					end
			}
		//11 - 20
		case 2:
			setvar (VAR_0x8004, SCROLL_MULTI_GET_BLUE_ROULETTE_RANGE_2_NUMBER)
			special (ShowScrollableMultichoice)
			waitstate
			switch (var(VAR_RESULT)) {
				case 0 :
					setvar (WAGER_NUMBER, 11)
				case 1:
					setvar (WAGER_NUMBER, 12)
				case 2:
					setvar (WAGER_NUMBER, 13)
				case 3:
					setvar (WAGER_NUMBER, 14)
				case 4:
					setvar (WAGER_NUMBER, 15)
				case 5:
					setvar (WAGER_NUMBER, 16)
				case 6:
					setvar (WAGER_NUMBER, 17)
				case 7:
					setvar (WAGER_NUMBER, 18)
				case 8:
					setvar (WAGER_NUMBER, 19)
				case 9:
					setvar (WAGER_NUMBER, 20)
				case 10:
					call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
				default:
					msgbox ("ERROR\nOOB return from\nROULETTE_RANGE_2_NUMBER")
					closemessage
					release
					end
			}
		//21 - 30
		case 3:
			setvar (VAR_0x8004, SCROLL_MULTI_GET_BLUE_ROULETTE_RANGE_3_NUMBER)
			special (ShowScrollableMultichoice)
			waitstate
			switch (var(VAR_RESULT)) {
				case 0 :
					setvar (WAGER_NUMBER, 21)
				case 1:
					setvar (WAGER_NUMBER, 22)
				case 2:
					setvar (WAGER_NUMBER, 23)
				case 3:
					setvar (WAGER_NUMBER, 24)
				case 4:
					setvar (WAGER_NUMBER, 25)
				case 5:
					setvar (WAGER_NUMBER, 26)
				case 6:
					setvar (WAGER_NUMBER, 27)
				case 7:
					setvar (WAGER_NUMBER, 28)
				case 8:
					setvar (WAGER_NUMBER, 29)
				case 9:
					setvar (WAGER_NUMBER, 30)
				case 10:
					call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
				default:
					msgbox ("ERROR\nOOB return from\nROULETTE_RANGE_2_NUMBER")
					closemessage
					release
					end
			}
		//nvm
		case 4:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
		default:
			msgbox ("ERROR\nWAGER_RANGE OOB in\nGetNumberWager")
			closemessage
			release
			end
	}
	//confirm selection
	buffernumberstring (STR_VAR_1, WAGER_NUMBER)
	if (var(WAGER_NUMBER) < 31) {
		msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmWagerNumber, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			return
		} else {
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetNumberWager)
		}
	} else {
		msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmWager00, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			return
		} else {
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetNumberWager)
		}
	}
}

script Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager {
	//reset color wager
	setvar (WAGER_COLOR, 0)
	//what color will you bet 
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGetColorWager)
	closemessage
	//Determine color, NVM
	multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_WAGER_COLOR, TRUE)
	copyvar (WAGER_COLOR, VAR_RESULT)
	//confirm selection
	switch (var(WAGER_COLOR)) {
		//red
		case 0:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorRed, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager)
			}
		//blue
		case 1:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorBlue, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager)
			}
		//green
		case 2:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorGreen, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager)
			}
		//nvm
		case 3:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
		default:
			msgbox("ERROR\nWAGER_COLOR OOB")
			closemessage
			release
			end
	}
}

script Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager {
	//reset range wager
	setvar (WAGER_RANGE, 0)
	//msg what range will you bet
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGetRangeWager)
	closemessage
	//multi determine range
	multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_WAGER_RANGE, TRUE)
	//confirm range
	copyvar (WAGER_RANGE, VAR_RESULT)
	switch (var(WAGER_RANGE)) {
		//0 et 00
		case 0:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange0, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
			}
		//1 - 10
		case 1:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange1, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
			}
		//11 - 20
		case 2:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange2, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
			}
		//21 - 30
		case 3:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange3, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
			}
		//nvm
		case 4:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
		default:
			msgbox ("ERROR\nWAGER_RANGE OOB")
			closemessage
			release
			end
	}
}

script Peccadum_PalatiumFelix_Script_BlueRouletteCheckWin {
	//switch on wager type
	switch (var(WAGER_TYPE)) {
		//number
		case 0:
			if (var(SPIN_RESULT) == WAGER_NUMBER) {
				call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
			}
		//color
		case 1:
			switch (var(WAGER_COLOR)) {
				//red
				case 0:
					if     (var(SPIN_RESULT) == 2 || var(SPIN_RESULT) == 4 || var(SPIN_RESULT) == 6 || var(SPIN_RESULT) == 8 ||
							var(SPIN_RESULT) == 10 || var(SPIN_RESULT) == 12 || var(SPIN_RESULT) == 14 || var(SPIN_RESULT) == 16 || var(SPIN_RESULT) == 18 ||
							var(SPIN_RESULT) == 20 || var(SPIN_RESULT) == 22 || var(SPIN_RESULT) == 24 || var(SPIN_RESULT) == 26 || var(SPIN_RESULT) == 28 ||
							var(SPIN_RESULT) == 30) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//blue
				case 1:
					if     (var(SPIN_RESULT) == 1 || var(SPIN_RESULT) == 3 || var(SPIN_RESULT) == 5 || var(SPIN_RESULT) == 7 ||
							var(SPIN_RESULT) == 9 || var(SPIN_RESULT) == 11 || var(SPIN_RESULT) == 13 || var(SPIN_RESULT) == 15 || var(SPIN_RESULT) == 17 ||
							var(SPIN_RESULT) == 19 || var(SPIN_RESULT) == 21 || var(SPIN_RESULT) == 23 || var(SPIN_RESULT) == 25 || var(SPIN_RESULT) == 27 ||
							var(SPIN_RESULT) == 29) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//green
				case 2:
					if (var(SPIN_RESULT) == 0 || var(SPIN_RESULT) == 31) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				default:
					msgbox ("ERROR\nWAGER_COLOR OOB in CheckWin")
					closemessage
					release
					end
			}
		//range
		case 2:
			switch (var(WAGER_RANGE)) {
				//0 et 00
				case 0:
					if (var(SPIN_RESULT) == 0 || var(SPIN_RESULT) == 31) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//1 - 10
				case 1:
					if (var(SPIN_RESULT) > 0 && var(SPIN_RESULT) < 11) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//11 - 20
				case 2:
					if (var(SPIN_RESULT) > 10 && var(SPIN_RESULT) < 11) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//21 - 30
				case 3:
					if (var(SPIN_RESULT) > 20 && var(SPIN_RESULT) < 31) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				default:
					msgbox ("ERROR\nWAGER_RANGE OOB in CheckWin")
					closemessage
					release
					end
			}
		default:
			msgbox ("ERROR\nWAGER_TYPE OOB in CheckWin")
			closemessage
			release
			end
	}
}

script Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin {
	showcoinsbox (21, 1)
	msgbox (Peccadum_PalatiumFelix_Text_BlueRoulettePlayerWin)
	closemessage
	//do payout stuff
	switch (var(WAGER_TYPE)) {
		//number
		case 0:
			if (var(WAGER) <  500) {
				multvar (WAGER, 30)
			} else {
				setvar (WAGER, 9999)
			}
		//color
		case 1:
			//red or blue
			if (var(WAGER) !=  2) {
				multvar (WAGER, 2)
			//green
			} else {
				if (var(WAGER) <  100) {
					multvar (WAGER, 15)
				} else {
					setvar (WAGER, 9999)
				}
			}
		//range
		case 2:
			//normal ranges
			if (var(WAGER) !=  0) {
				multvar (WAGER, 3)
			//green
			} else {
				if (var(WAGER) <  100) {
					multvar (WAGER, 15)
				} else {
					setvar (WAGER, 9999)
				}
			}
		default:
			hidecoinsbox (21, 1)
			msgbox ("ERROR\nWAGER_TYPE OOB in PlayerWin")
			closemessage
			release
			end
	}
	addcoins (WAGER)
	updatecoinsbox (21, 1)
	playse (SE_SHOP)
	waitse
	hidecoinsbox (21,1)
	call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayAgain)
}

script Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose {
	msgbox (Peccadum_PalatiumFelix_Text_BlueRoulettePlayerLose)
	call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayAgain)
}

script Peccadum_PalatiumFelix_Script_BlueRoulettePlayAgain {
	msgbox(Peccadum_PalatiumFelix_Text_BlueRoulettePlayAgain, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
        call (Peccadum_PalatiumFelix_Script_BlueRouletteBrain)
    } else {
		call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
    }
}

script Peccadum_PalatiumFelix_Script_BlueRouletteEnd  {
	if (flag(WAGER_REFUND)) {
		showcoinsbox (21, 1)
		msgbox (CasinoDealer_Text_Refund)
		switch (var(WAGER)) {
			case 5:	
				addcoins (5)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 25:	
				addcoins (25)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 100:	
				addcoins (100)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 500:	
				addcoins (500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 1000:	
				addcoins (1000)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 2500:
				addcoins (2500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			default:
				msgbox("ERROR\nWAGER OOB in RefundSwitch")
				closemessage
				release
				end
		}
	}	
    //see you again
    msgbox (CasinoDealer_Text_Bye)
    //face dealer down
    applymovement (VAR_LAST_TALKED, Common_Movement_FaceDown)
    waitmovement (0)
    closemessage
    release
    end
}

script Peccadum_PalatiumFelix_Script_DealerHiLoKabuto {
	lock
	//welcome - I am
	msgbox (Peccadum_HarenaeAureae_Text_DealerHiLoKabuto_Intro)
	//will you play yes no
	msgbox (Peccadum_HarenaeAureae_Text_DealerHiLoKabuto_Start, MSGBOX_YESNO)
	//no: Come again
	if (var(VAR_RESULT) == FALSE) {
		call (DealerHiLoKabuto_Script_End)
	//yes: Do Game
	} else {
		//can only play if you have at least 1 coin
		checkcoins (CHECK_COINS)
		if (var(CHECK_COINS) > 0) {
			call (Peccadum_PalatiumFelix_Script_DealerHiLoKabuto_Brain)
		} else {
        msgbox (Peccadum_PalatiumFelix_Text_NoCoins)
		call (DealerHiLoKabuto_Script_End)
		}
	}
	release
	end
}

script Peccadum_PalatiumFelix_Script_DealerHiLoKabuto_Brain {
	//Get Wager
	call (DealerHiLoKabuto_Script_GetCoinWager)
	//reset game
    call (DealerHiLoKabuto_Script_ResetGame)
	//determine Hi or Lo Kabuto
	call (HiLoKabuto_Script_DetermineHiOrLoKabuto)
	//assign cards - remove card from pool after drawing
	//player
    call (HiLoKabuto_Script_RemoveCard)
    specialvar (VAR_RESULT, RandDigit)
    copyvar (PLAYER_CARD, VAR_RESULT)
	//dealer
    do {
        specialvar (VAR_RESULT, RandDigit)
    } while (var(VAR_RESULT) == PLAYER_CARD)
    copyvar (DEALER_CARD, VAR_RESULT)
	//handle Hi or Lo Kabuto
    if (flag(KABUTOHI)) {
        if (var(PLAYER_CARD) == 0) {
            setvar (PLAYER_CARD, 10)
        }
        if (var(DEALER_CARD) == 0) {
            setvar (DEALER_CARD, 10)
        }
    }
	//announce results
    buffernumberstring (STR_VAR_1, PLAYER_CARD)
    buffernumberstring (STR_VAR_2, DEALER_CARD)
    if (var(PLAYER_CARD) == 10 || var(PLAYER_CARD) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnouncePlayerKabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnouncePlayerCard)
    }
    if (var(DEALER_CARD) == 10 || var(DEALER_CARD) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnounceDealerKabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnounceDealerCard)
    }
	//do payout if win - NOTE: WAGER is set to 1,5,10,25,50,100,250...
	if (var(PLAYER_CARD) > DEALER_CARD) {
        call (DealerHiLoKabuto_Script_PlayerWinCoins)
    } else {
        msgbox (DealerHiLoKabuto_Text_DealerWin)
    }
	//play again?
    call (DealerHiLoKabuto_Script_PlayAgainCoins)
}

script DealerHiLoKabuto_Script_GetCoinWager {
	setvar (WAGER, 0)
	showcoinsbox (21, 1)
	msgbox (SaltySpitoon_Text_HiLoKabuto_GetWager)
    closemessage
	setvar (VAR_0x8004, SCROLL_MULTI_PALATIUM_FELIX_COIN_CASHIER)
	special (ShowScrollableMultichoice)
	waitstate
	copyvar (WAGER, VAR_RESULT)
	switch (var(WAGER)) {
		//1
		case 0:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 0) {
				removecoins (1)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 1)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_NoCoins)
				call (DealerHiLoKabuto_Script_End)
			}
		//5
		case 1:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 4) {
				removecoins (5)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 5)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//10
		case 2:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 9) {
				removecoins (10)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 10)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//25
		case 3:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 24) {
				removecoins (25)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 25)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//50
		case 4:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 49) {
				removecoins (50)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 50)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//100
		case 5:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 99) {
				removecoins (100)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 100)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//250
		case 6:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 249) {
				removecoins (250)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 250)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//500
		case 7:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 499) {
				removecoins (500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 500)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//1000
		case 8:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 999) {
				removecoins (1000)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 1000)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//2500
		case 9:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 2499) {
				removecoins (2500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 2500)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//5000
		case 10:
			checkcoins (CHECK_COINS)
			if (var(CHECK_COINS) > 4999) {
				removecoins (5000)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 5000)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins)
				call (DealerHiLoKabuto_Script_GetCoinWager)
			}
		//nvm
		case 11:
			hidecoinsbox (21, 1)
			call (DealerHiLoKabuto_Script_End)
		default:
			msgbox("ERROR\nVAR_RESULT OOB GetCoinWager")
			closemessage
			release
			end
	}
}

script DealerHiLoKabuto_Script_PlayerWinCoins {
	showcoinsbox (21, 1)
    msgbox (DealerHiLoKabuto_Text_PlayerWin)
	multvar (WAGER, 2)
	addcoins (WAGER)
	updatecoinsbox (21, 1)
	playse (SE_SHOP)
	waitse
	hidecoinsbox (21,1)
	return
}

script DealerHiLoKabuto_Script_PlayAgainCoins {
    msgbox (DealerHiLoKabuto_Text_PlayAgain, MSGBOX_YESNO)
    if (var(VAR_RESULT) == YES) {
        call (Peccadum_PalatiumFelix_Script_DealerHiLoKabuto_Brain)
    } else {
		call (DealerHiLoKabuto_Script_End)
    }
}

script Peccadum_PalatiumFelix_Script_TableDealer {
	lock
	faceplayer
	msgbox (Peccadum_HarenaeAureae_Text_DealerHiLoKabuto_Intro)
	msgbox (Peccadum_HarenaeAureae_Text_DealerOpen_TakeSeat)
	applymovement (VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection)
	waitmovement (0)
	closemessage
	release
	end
}

script Peccadum_PalatiumFelix_Script_BusyDealer {
	lock
	faceplayer
	msgbox (Peccadum_HarenaeAureae_Text_DealerBusy)
	applymovement (VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection)
	waitmovement (0)
	closemessage
	release
	end
}

script Peccadum_PalatiumFelix_Script_4HiLoKabutoA {
    lock
	if (!flag(FLAG_PALATIUMFELIX_LOGISTICS_DONE)) {
		setvar (TRIGGER_LOGISTICS_SCENE, 1)
	}
	call (Peccadum_PalatiumFelix_Script_4HiLoKabuto)
}

script Peccadum_PalatiumFelix_Script_4HiLoKabutoB {
    lock
	if (!flag(FLAG_PALATIUMFELIX_LOGISTICS_DONE)) {
		specialvar (VAR_RESULT, GetPlayerFacingDirection)
		if (var(VAR_RESULT) == DIR_NORTH) {
			setvar (TRIGGER_LOGISTICS_SCENE, 3)
		} elif (var(VAR_RESULT) == DIR_SOUTH) {
			setvar (TRIGGER_LOGISTICS_SCENE, 2)
		} else {
			msgbox("ERROR\nPlayerFacingDirection OOB")
			closemessage
			release
			end
		}
	}
	call (Peccadum_PalatiumFelix_Script_4HiLoKabuto)
}
		

//1,000 coin buy in. High rollers. After playing at least once do the logistics boss script
script Peccadum_PalatiumFelix_Script_4HiLoKabuto {
    showcoinsbox (21, 1)
    msgbox (Peccadum_PalatiumFelix_Text_4HiLoKabuto, MSGBOX_YESNO)
	if (var(VAR_RESULT) == FALSE) {
        hidecoinsbox (21, 1)
		call (HiLoKabuto_Group_Script_End)
	} else {
		call (HiLoKabuto_Group4_Script_CoinBrain)
	}
}

//150 coin buy in
script Peccadum_PalatiumFelix_Script_5HiLoKabuto {
    lock
    showcoinsbox (21, 1)
    msgbox (Peccadum_PalatiumFelix_Text_5HiLoKabuto, MSGBOX_YESNO)
	if (var(VAR_RESULT) == FALSE) {
        hidecoinsbox (21, 1)
		call (HiLoKabuto_Group_Script_End)
	} else {
		call (HiLoKabuto_Group5_Script_CoinBrain)
	}
}

script HiLoKabuto_Group4_Script_CoinBrain {
    //remove coins (check to ensure you have the coin) 1,000 buy in
    checkcoins (CHECK_COINS)
    if (var(CHECK_COINS) < 1000) {
        msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
        hidecoinsbox (21, 1)
        call (HiLoKabuto_Group_Script_End)
    } else {
       removecoins (1000)
       updatecoinsbox (21, 1)
       playse (SE_SHOP)
       waitse
       hidecoinsbox (21, 1)
    }
    //reset game
    call  (HiLoKabuto_Group_Script_ResetGame)
    //Determine Hi Lo Kabuto
	call (HiLoKabuto_Script_DetermineHiOrLoKabuto)
    //assign cards et remove from pool
	//Opo1
	specialvar (OPPONENT_CARD_1, RandDigit)
	//Opo2
	do {
		specialvar (OPPONENT_CARD_2, RandDigit)
	} while (var(OPPONENT_CARD_2) == OPPONENT_CARD_1)
	//Opo3	
	do {
		specialvar (OPPONENT_CARD_3, RandDigit)
	} while (var(OPPONENT_CARD_3) == OPPONENT_CARD_1 || (var(OPPONENT_CARD_3) == OPPONENT_CARD_2))
	//PlayerCard
	do {
		specialvar (PLAYER_CARD, RandDigit)
	} while (var(PLAYER_CARD) == OPPONENT_CARD_1 || (var(PLAYER_CARD) == OPPONENT_CARD_2) || (var(PLAYER_CARD) == OPPONENT_CARD_3))
	//handle kabuto hi: 0 -> 10
	if (flag(KABUTOHI)) {
        if (var(PLAYER_CARD) == 0) {
            setvar (PLAYER_CARD, 10)
        }
        if (var(OPPONENT_CARD_1) == 0) {
            setvar (OPPONENT_CARD_1, 10)
        }
        if (var(OPPONENT_CARD_2) == 0) {
            setvar (OPPONENT_CARD_2, 10)
        }
        if (var(OPPONENT_CARD_3) == 0) {
            setvar (OPPONENT_CARD_3, 10)
        }
	}
    //announce results
	//player first
    buffernumberstring (STR_VAR_1, PLAYER_CARD)
	if (var(PLAYER_CARD) == 10 || var(PLAYER_CARD) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnouncePlayerKabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnouncePlayerCard)
    }
	//Opponents 1 - 3
	buffernumberstring (STR_VAR_1, OPPONENT_CARD_1)
	if (var(OPPONENT_CARD_1) == 10 || var(OPPONENT_CARD_1) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp1Kabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp1Card)
    }
	buffernumberstring (STR_VAR_2, OPPONENT_CARD_2)
	if (var(OPPONENT_CARD_2) == 10 || var(OPPONENT_CARD_2) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp2Kabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp2Card)
    }
	buffernumberstring (STR_VAR_3, OPPONENT_CARD_3)
	if (var(OPPONENT_CARD_3) == 10 || var(OPPONENT_CARD_3) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp3Kabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp3Card)
    }
    //declare winner - handle play pay out if winner
	if (var(PLAYER_CARD) > OPPONENT_CARD_1 && var(PLAYER_CARD) > OPPONENT_CARD_2 && var(PLAYER_CARD) > OPPONENT_CARD_3) {
		call (HiLoKabuto_Group4_Script_PlayerWinCoins)
	} else {
		//declare which gambler won
		if (var(OPPONENT_CARD_1) > PLAYER_CARD && var(OPPONENT_CARD_1) > OPPONENT_CARD_2 && var(OPPONENT_CARD_1) > OPPONENT_CARD_3) {
			msgbox (HiLoKabuto_Text_Gambler1Won)
		} elif (var(OPPONENT_CARD_2) > PLAYER_CARD && var(OPPONENT_CARD_2) > OPPONENT_CARD_1 && var(OPPONENT_CARD_2) > OPPONENT_CARD_3) {
			msgbox (HiLoKabuto_Text_Gambler2Won)
		} elif (var(OPPONENT_CARD_3) > PLAYER_CARD && var(OPPONENT_CARD_3) > OPPONENT_CARD_1 && var(OPPONENT_CARD_3) > OPPONENT_CARD_2) {
			msgbox (HiLoKabuto_Text_Gambler3Won)
		} else {
			msgbox ("ERROR\nDeclare gambler winner\nOOB")
		}
	}
    //play again
    showcoinsbox (21, 1)
	msgbox (HiLoKabuto_Group4Coins_Text_PlayAgain, MSGBOX_YESNO)
	if (var(VAR_RESULT) == YES) {
		call (HiLoKabuto_Group4_Script_CoinBrain)
	} else {
        hidecoinsbox (21, 1)
		if (!flag(FLAG_PALATIUMFELIX_LOGISTICS_DONE)) {
			call (Peccadum_PalatiumFelix_Script_Group4_End_TriggerLogistics)
		} else {
			call (HiLoKabuto_Group_Script_End)
		}
	}

}

script HiLoKabuto_Group5_Script_CoinBrain {
    //remove coins (check to ensure you have the coin) 150 buy in
    checkcoins (CHECK_COINS)
    if (var(CHECK_COINS) < 150) {
        msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
        hidecoinsbox (21, 1)
        call (HiLoKabuto_Group_Script_End)
    } else {
       removecoins (150)
       updatecoinsbox (21, 1)
       playse (SE_SHOP)
       waitse
       hidecoinsbox (21, 1)
    }
    //reset game
    call  (HiLoKabuto_Group_Script_ResetGame)
    //Determine Hi Lo Kabuto
	call (HiLoKabuto_Script_DetermineHiOrLoKabuto)
    //assign cards et remove from pool
	//Opo1
	specialvar (OPPONENT_CARD_1, RandDigit)
	//Opo2
	do {
		specialvar (OPPONENT_CARD_2, RandDigit)
	} while (var(OPPONENT_CARD_2) == OPPONENT_CARD_1)
	//Opo3	
	do {
		specialvar (OPPONENT_CARD_3, RandDigit)
	} while (var(OPPONENT_CARD_3) == OPPONENT_CARD_1 || (var(OPPONENT_CARD_3) == OPPONENT_CARD_2))
	//Opo4
	do {
		specialvar (OPPONENT_CARD_4, RandDigit)
	} while (var(OPPONENT_CARD_4) == OPPONENT_CARD_1 || (var(OPPONENT_CARD_4) == OPPONENT_CARD_2) || (var(OPPONENT_CARD_4) == OPPONENT_CARD_3))
	//PlayerCard
	do {
		specialvar (PLAYER_CARD, RandDigit)
	} while (var(PLAYER_CARD) == OPPONENT_CARD_1 || (var(PLAYER_CARD) == OPPONENT_CARD_2) || (var(PLAYER_CARD) == OPPONENT_CARD_3) || (var(PLAYER_CARD) == OPPONENT_CARD_4))
    //handle Kabuto Hi
	if (flag(KABUTOHI)) {
        if (var(PLAYER_CARD) == 0) {
            setvar (PLAYER_CARD, 10)
        }
        if (var(OPPONENT_CARD_1) == 0) {
            setvar (OPPONENT_CARD_1, 10)
        }
        if (var(OPPONENT_CARD_2) == 0) {
            setvar (OPPONENT_CARD_2, 10)
        }
        if (var(OPPONENT_CARD_3) == 0) {
            setvar (OPPONENT_CARD_3, 10)
        }
        if (var(OPPONENT_CARD_4) == 0) {
            setvar (OPPONENT_CARD_4, 10)
        }
	}
    //announce results
	//player first
    buffernumberstring (STR_VAR_1, PLAYER_CARD)
	if (var(PLAYER_CARD) == 10 || var(PLAYER_CARD) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnouncePlayerKabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnouncePlayerCard)
    }
	//Opponents 1 - 3
	buffernumberstring (STR_VAR_1, OPPONENT_CARD_1)
	if (var(OPPONENT_CARD_1) == 10 || var(OPPONENT_CARD_1) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp1Kabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp1Card)
    }
	buffernumberstring (STR_VAR_2, OPPONENT_CARD_2)
	if (var(OPPONENT_CARD_2) == 10 || var(OPPONENT_CARD_2) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp2Kabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp2Card)
    }
	buffernumberstring (STR_VAR_3, OPPONENT_CARD_3)
	if (var(OPPONENT_CARD_3) == 10 || var(OPPONENT_CARD_3) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp3Kabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp3Card)
    }
	//Opponent 4 
	buffernumberstring (STR_VAR_1, OPPONENT_CARD_4)
	if (var(OPPONENT_CARD_4) == 10 || var(OPPONENT_CARD_4) == 0) {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp4Kabuto)
    } else {
        msgbox (DealerHiLoKabuto_Text_AnnounceOp4Card)
    }
    //declare winner - handle play pay out if winner
	if (var(PLAYER_CARD) > OPPONENT_CARD_1 && var(PLAYER_CARD) > OPPONENT_CARD_2 && var(PLAYER_CARD) > OPPONENT_CARD_3 && var(PLAYER_CARD) > OPPONENT_CARD_4) {
		call (HiLoKabuto_Group5_Script_PlayerWinCoins)
	} else {
		//declare which gambler won
		if (var(OPPONENT_CARD_1) > PLAYER_CARD && var(OPPONENT_CARD_1) > OPPONENT_CARD_2 && var(OPPONENT_CARD_1) > OPPONENT_CARD_3 && var(OPPONENT_CARD_1) > OPPONENT_CARD_4) {
			msgbox (HiLoKabuto_Text_Gambler1Won)
		} elif (var(OPPONENT_CARD_2) > PLAYER_CARD && var(OPPONENT_CARD_2) > OPPONENT_CARD_1 && var(OPPONENT_CARD_2) > OPPONENT_CARD_3 && var(OPPONENT_CARD_2) > OPPONENT_CARD_4) {
			msgbox (HiLoKabuto_Text_Gambler2Won)
		} elif (var(OPPONENT_CARD_3) > PLAYER_CARD && var(OPPONENT_CARD_3) > OPPONENT_CARD_1 && var(OPPONENT_CARD_3) > OPPONENT_CARD_2 && var(OPPONENT_CARD_3) > OPPONENT_CARD_4) {
			msgbox (HiLoKabuto_Text_Gambler3Won)
		} elif (var(OPPONENT_CARD_4) > PLAYER_CARD && var(OPPONENT_CARD_4) > OPPONENT_CARD_1 && var(OPPONENT_CARD_4) > OPPONENT_CARD_3 && var(OPPONENT_CARD_4) > OPPONENT_CARD_2) {
			msgbox (HiLoKabuto_Text_Gambler4Won)
		} else {
			msgbox ("ERROR\nDeclare gambler winner\nOOB")
		}
	}
    //play again
    showcoinsbox (21, 1)
	msgbox (HiLoKabuto_Group5Coins_Text_PlayAgain, MSGBOX_YESNO)
	if (var(VAR_RESULT) == YES) {
		call (HiLoKabuto_Group5_Script_CoinBrain)
	} else {
        hidecoinsbox (21, 1)
		call (HiLoKabuto_Group_Script_End)
	}

}

script HiLoKabuto_Group4_Script_PlayerWinCoins {
    showcoinsbox (21, 1)
    msgbox (HiLoKabuto_Group_Text_PlayerWin)
    addcoins (4000)
    updatecoinsbox (21, 1)
    playse (SE_SHOP)
    waitse
	msgbox (HiLoKabuto_Group4Coins_Text_PlayAgain, MSGBOX_YESNO)
	if (var(VAR_RESULT) == YES) {
		call (HiLoKabuto_Group4_Script_CoinBrain)
	} else {
        hidecoinsbox (21, 1)
		if (!flag(FLAG_PALATIUMFELIX_LOGISTICS_DONE)) {
			call (Peccadum_PalatiumFelix_Script_Group4_End_TriggerLogistics)
		} else {
			call (HiLoKabuto_Group_Script_End)
		}
	}
}

script HiLoKabuto_Group5_Script_PlayerWinCoins {
    showcoinsbox (21, 1)
    msgbox (HiLoKabuto_Group_Text_PlayerWin)
    addcoins (750)
    updatecoinsbox (21, 1)
    playse (SE_SHOP)
    waitse
	msgbox (HiLoKabuto_Group5Coins_Text_PlayAgain, MSGBOX_YESNO)
	if (var(VAR_RESULT) == YES) {
		call (HiLoKabuto_Group5_Script_CoinBrain)
	} else {
        hidecoinsbox (21, 1)
		call (HiLoKabuto_Group_Script_End)
	}
}

//special case of Group_End to handle the Logistics scene
script Peccadum_PalatiumFelix_Script_Group4_End_TriggerLogistics {
	msgbox (HiLoKabuto_Group_Text_End)
	closemessage
	//Logistics scene
	//Alert Player et Cornelius (Vanderbilt)
	applymovement (OBJ_EVENT_ID_PLAYER, Common_Movement_ExclamationMark)
	applymovement (OBJ_EVENT_CORNELIUS, Common_Movement_ExclamationMark)
	waitmovement (0)
	//player face Cornelius et Cornelius approach player
	applymovement (OBJ_EVENT_ID_PLAYER, Common_Movement_FaceDown)
	switch (var(TRIGGER_LOGISTICS_SCENE)) {
		case 0:
			msgbox("ERROR\n TRIGGER_LOGISTICS_SCENE = 0")
			release
			end
		case 1:
			applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius1A)
		case 2:
			applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius2A)
		case 3:
			applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius3A)
		default:
			msgbox("ERROR\n TRIGGER_LOGISTICS_SCENE OOB")
			release
			end
	}
	waitmovement (0)
	msgbox (Peccadum_PalatiumFelix_Text_Cornelius1, MSGBOX_YESNO)
    if (var(VAR_RESULT) == YES) {
        setflag (FLAG_PALATIUMFELIX_LOGISTICS_DONE)
        msgbox (Peccadum_PalatiumFelix_Text_Cornelius2)
        closemessage
        //They walk to privacy
        switch (var(TRIGGER_LOGISTICS_SCENE)) {
            case 0:
                msgbox("ERROR\n TRIGGER_LOGISTICS_SCENE = 0")
                release
                end
            case 1:
                applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius1C)
            case 2:
                applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius2C)
            case 3:
                applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius3C)
            default:
                msgbox("ERROR\n TRIGGER_LOGISTICS_SCENE OOB")
                release
                end

        }
        //cont
    } else {
        msgbox (Peccadum_PalatiumFelix_Text_CorneliusDeny)
        closemessage
        //Cornelius return to chair
        switch (var(TRIGGER_LOGISTICS_SCENE)) {
            case 0:
                msgbox("ERROR\n TRIGGER_LOGISTICS_SCENE = 0")
                release
                end
            case 1:
                applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius1B)
            case 2:
                applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius2B)
            case 3:
                applymovement (OBJ_EVENT_CORNELIUS, Peccadum_PalatiumFelix_Movement_Cornelius3B)
            default:
                msgbox("ERROR\n TRIGGER_LOGISTICS_SCENE OOB")
                release
                end
        }
        waitmovement (0)
    }
	release
	end
}

movement Peccadum_PalatiumFelix_Movement_Cornelius1A {
	walk_up
	walk_left
}

movement Peccadum_PalatiumFelix_Movement_Cornelius2A {
	walk_up
	face_left
}

movement Peccadum_PalatiumFelix_Movement_Cornelius3A {
	walk_down
	face_left
}

//B: Cornelius return to chair on CorneliusDeny
movement Peccadum_PalatiumFelix_Movement_Cornelius1B {
	walk_right
	walk_down
	face_left
}

movement Peccadum_PalatiumFelix_Movement_Cornelius2B {
	walk_down
	face_left
}

movement Peccadum_PalatiumFelix_Movement_Cornelius3B {
	walk_up
	face_left
}
    
    
text Peccadum_PalatiumFelix_Text_BlueRouletteDealerIntro {
    format("I am the Blue Roulette table dealer.")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteDealerBegin {
    format("Would you like to play a game of roulette?")
}

text Peccadum_PalatiumFelix_Text_NoCoins {
    format("Excuse me sir, but coins are required to play games at Palatium Felix. Please speak with the cashier to purchase more.")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGetWagerType {
	format("What kind of wager will you be placing?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmNumberWager {
	format("A wager on a winning number pays thirty to one. Are you sure that you will place a wager on a single number?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorWager {
	format("The payout for a wager on color depends on which color you wager on. Both {COLOR RED}red {COLOR DARK_GRAY}and {COLOR BLUE}blue {COLOR DARK_GRAY}pay out at two to one while {COLOR GREEN}green {COLOR DARK_GRAY}pays out higher, fifteen to one. Are you sure that you will bet on color?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRangeWager {
	format("A winning bet on range pays three to one, except for zero and double zero which pays the same as {COLOR GREEN}green{COLOR DARK_GRAY}, fifteen to one. Are you sure you want to wager on range?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGetNumberWager {
	format("There are thirty two individual spaces on the roulette wheel: numbers from one to thirty, single, and double nil. Which number will you be wagering on?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGetRangeWager {
	format("Which range of numbers will you wager on?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGetColorWager {
	format("Which color will you be wagering on?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorRed {
	format("You have chosen to wager color {COLOR RED}red{COLOR DARK_GRAY}. This wager will payout at two to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorBlue {
	format("You have chosen to wager color {COLOR BLUE}blue{COLOR DARK_GRAY}. This wager will payout at two to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorGreen {
	format("You have chosen to wager color {COLOR GREEN}green{COLOR DARK_GRAY}. This wager will payout fifteen to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange0 {
	format("You have chosen to wager on the range of zero and double zero. This will payout fifteen to one. Are you certain?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange1 {
	format("You have chosen to wager on the range of numbers one through ten. This will payout at three to one. Will you confirm this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange2 {
	format("You have chosen to wager on the range eleven through twenty. This will payout at three to one. Will you confirm this bet? ")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange3 {
	format("You have chosen to wager on the range of numbers from twenty one through thirty. The payout for this bet is three to one. Are you certain you want to place this bet?")
}

text CasinoDealer_Text_Refund {
	format("Here are the unwagered coins back for you.")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmWagerNumber {
	format("You have chosen to wager on {STR_VAR_1}. The payout will be at thirty to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmWager00 {
	format("You have chosen to bet double zero. The payout will be at thirty to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGoodLuck {
	format("Rien ne va plus! No more bets! Sir, good luck!")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteAnnounceSpin {
	format("The result of this spin is {STR_VAR_1}!")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteAnnounce00 {
	format("The result of the spin: double zero!")
}

text Peccadum_PalatiumFelix_Text_BlueRoulettePlayerWin {
	format("Congratulations {PLAYER}! You won your bet!")
}

text Peccadum_PalatiumFelix_Text_BlueRoulettePlayerLose {
	format("I'm sorry but you did not win your bet.")
}

text Peccadum_PalatiumFelix_Text_BlueRoulettePlayAgain {
	format("Would you like to bet on roulette again?")
}

text Peccadum_PalatiumFelix_Text_Cashier {
	format("Hello! Welcome to the Palatium Felix! Would you like to trade coins for cash?")
}

text Peccadum_PalatiumFelix_Text_CashierPurchase {
	format("We're happy to sell you as many coins as you would like. They're one hundred bucks each. How many coins would you like to purchase?")
}

text Peccadum_PalatiumFelix_Text_CashierSell {
	format("We're happy to exchange as many coins as you would like for one hundred bucks each. How many coins would you like to exchange?")
}

text Peccadum_PalatiumFelix_Text_CashierNotEnoughMoney {
	format("You don't have enough money for those coins.")
}

text Peccadum_PalatiumFelix_Text_CashierNoRoomForCoins {
	format("I'm sorry but you don't have enough room in your coin case to carry that many.")
}

text Peccadum_PalatiumFelix_Text_CashierTooMuchMoney {
	format("I'm sorry but you don't have enough room to carry that much money in your purse.")
}

text Peccadum_PalatiumFelix_Text_CashierNotEnoughCoins {
	format("You don't have enough coins for that exchange.")
}

text Peccadum_PalatiumFelix_Text_CashierBye {
	format("We hope to see you again soon! Good luck!")
}

text Peccadum_PalatiumFelix_Text_CashierTakeCoins {
	format("Here are the coins you asked for sir. Thank you.")
}

text Peccadum_PalatiumFelix_Text_CashierTakeMoney {
	format("There is the money exchanged for you coins.")
}

text Peccadum_PalatiumFelix_Text_4HiLoKabuto {
    format("This is the high roller table. Buy in is one thousand coins. Do you want to play?")
}

//Buy in for our table is one hundred
//and fifty coins. Would you like to join in?
text Peccadum_PalatiumFelix_Text_5HiLoKabuto {
    format("Buy in for our table is one hundred and fifty coins. Would you like to join in?")
}

text HiLoKabuto_Group4Coins_Text_PlayAgain {
    format("Would you like to wager another hand? Buy in will stay the same: one thousand coins.")
}

text HiLoKabuto_Group5Coins_Text_PlayAgain {
    format("Would you like to wager another hand? Buy in will be one hundred fifty coins.")
}







