
const OBJ_EVENT_TEACHER = 2

mapscripts Ardor_Uni_GeologyClass_MapScripts {}




script Ardor_Uni_GeologyClass_EventScript_FossilMachine {
	lock	
	msgbox (Ardor_Uni_GeologyClass_Text_FossilMachine)
	closemessage
	if (defeated(TRAINER_UNI_GEOLOGY)) {
		//Select a Fossil to ressurect
		checkitem (ITEM_HELIX_FOSSIL)
		if (var(VAR_RESULT) == TRUE) {
			call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
		} 
		checkitem (ITEM_DOME_FOSSIL)
		if (var(VAR_RESULT) == TRUE) {
			call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
		} 
		checkitem (ITEM_OLD_AMBER)
		if (var(VAR_RESULT) == TRUE) {
			call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
		} 
		checkitem (ITEM_ROOT_FOSSIL)
		if (var(VAR_RESULT) == TRUE) {
			call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
		} 
		checkitem (ITEM_CLAW_FOSSIL)
		if (var(VAR_RESULT) == TRUE) {
			call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
		} 
		checkitem (ITEM_SKULL_FOSSIL)
		if (var(VAR_RESULT) == TRUE) {
			call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
		} 
		checkitem (ITEM_ARMOR_FOSSIL)
		if (var(VAR_RESULT) == TRUE) {
			call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
		} 
	}
	release
	end
}

script Ardor_Uni_GeologyClass_EventScript_MachineEnd {
	msgbox(Ardor_Uni_GeologyClass_Text_NextTime)
	closemessage
	end
}

script Ardor_Uni_GeologyClass_EventScript_GiveHelix {
	removeitem (ITEM_HELIX_FOSSIL)
	bufferitemname (STR_VAR_1, ITEM_HELIX_FOSSIL)
	bufferspeciesname (STR_VAR_2, SPECIES_OMANYTE)
	msgbox(Ardor_Uni_GeologyClass_Text_GiveFossil)
	closemessage
	givemon (SPECIES_OMANYTE, 1)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_OMANYTE)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_GetGiftMonPartySlot)
			call (Common_EventScript_NameReceivedPartyMon)
		}
	} elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_OMANYTE)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_NameReceivedBoxMon)
		}
		call (Common_EventScript_TransferredToPC)
	} else {
		call (Common_EventScript_NoMoreRoomForPokemon)
	}
	call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
}

script Ardor_Uni_GeologyClass_EventScript_GiveDome {
	removeitem (ITEM_DOME_FOSSIL)
	bufferitemname (STR_VAR_1, ITEM_DOME_FOSSIL)
	bufferspeciesname (STR_VAR_2, SPECIES_KABUTO)
	msgbox(Ardor_Uni_GeologyClass_Text_GiveFossil)
	closemessage
	givemon (SPECIES_KABUTO, 1)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_KABUTO)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_GetGiftMonPartySlot)
			call (Common_EventScript_NameReceivedPartyMon)
		}
	} elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_KABUTO)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_NameReceivedBoxMon)
		}
		call (Common_EventScript_TransferredToPC)
	} else {
		call (Common_EventScript_NoMoreRoomForPokemon)
	}
	call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
}

script Ardor_Uni_GeologyClass_EventScript_GiveOldAmber {
	removeitem (ITEM_OLD_AMBER)
	bufferitemname (STR_VAR_1, ITEM_OLD_AMBER)
	bufferspeciesname (STR_VAR_2, SPECIES_AERODACTYL)
	msgbox(Ardor_Uni_GeologyClass_Text_GiveFossil)
	closemessage
	givemon (SPECIES_AERODACTYL, 1)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_AERODACTYL)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_GetGiftMonPartySlot)
			call (Common_EventScript_NameReceivedPartyMon)
		}
	} elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_AERODACTYL)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_NameReceivedBoxMon)
		}
		call (Common_EventScript_TransferredToPC)
	} else {
		call (Common_EventScript_NoMoreRoomForPokemon)
	}
	call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
}

script Ardor_Uni_GeologyClass_EventScript_GiveRoot {
	removeitem (ITEM_ROOT_FOSSIL)
	bufferitemname (STR_VAR_1, ITEM_ROOT_FOSSIL)
	bufferspeciesname (STR_VAR_2, SPECIES_LILEEP)
	msgbox(Ardor_Uni_GeologyClass_Text_GiveFossil)
	closemessage
	givemon (SPECIES_LILEEP, 1)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_LILEEP)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_GetGiftMonPartySlot)
			call (Common_EventScript_NameReceivedPartyMon)
		}
	} elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_LILEEP)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_NameReceivedBoxMon)
		}
		call (Common_EventScript_TransferredToPC)
	} else {
		call (Common_EventScript_NoMoreRoomForPokemon)
	}
	call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
}

script Ardor_Uni_GeologyClass_EventScript_GiveClaw {
	removeitem (ITEM_CLAW_FOSSIL)
	bufferitemname (STR_VAR_1, ITEM_CLAW_FOSSIL)
	bufferspeciesname (STR_VAR_2, SPECIES_ANORITH)
	msgbox(Ardor_Uni_GeologyClass_Text_GiveFossil)
	closemessage
	givemon (SPECIES_ANORITH, 1)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_ANORITH)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_GetGiftMonPartySlot)
			call (Common_EventScript_NameReceivedPartyMon)
		}
	} elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_ANORITH)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_NameReceivedBoxMon)
		}
		call (Common_EventScript_TransferredToPC)
	} else {
		call (Common_EventScript_NoMoreRoomForPokemon)
	}
	call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
}

script Ardor_Uni_GeologyClass_EventScript_GiveSkull {
	removeitem (ITEM_SKULL_FOSSIL)
	bufferitemname (STR_VAR_1, ITEM_SKULL_FOSSIL)
	bufferspeciesname (STR_VAR_2, SPECIES_CRANIDOS)
	msgbox(Ardor_Uni_GeologyClass_Text_GiveFossil)
	closemessage
	givemon (SPECIES_CRANIDOS, 1)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_CRANIDOS)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_GetGiftMonPartySlot)
			call (Common_EventScript_NameReceivedPartyMon)
		}
	} elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_CRANIDOS)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_NameReceivedBoxMon)
		}
		call (Common_EventScript_TransferredToPC)
	} else {
		call (Common_EventScript_NoMoreRoomForPokemon)
	}
	call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
}

script Ardor_Uni_GeologyClass_EventScript_GiveArmor {
	removeitem (ITEM_ARMOR_FOSSIL)
	bufferitemname (STR_VAR_1, ITEM_ARMOR_FOSSIL)
	bufferspeciesname (STR_VAR_2, SPECIES_SHIELDON)
	msgbox(Ardor_Uni_GeologyClass_Text_GiveFossil)
	closemessage
	givemon (SPECIES_SHIELDON, 1)
	if (var(VAR_RESULT) == MON_GIVEN_TO_PARTY) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_SHIELDON)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_GetGiftMonPartySlot)
			call (Common_EventScript_NameReceivedPartyMon)
		}
	} elif (var(VAR_RESULT) == MON_GIVEN_TO_PC) {
		playfanfare (MUS_OBTAIN_ITEM)
		msgbox (Ardor_Uni_GeologyClass_Text_ObtainedPokemon)
		closemessage
		waitfanfare
		bufferspeciesname (STR_VAR_1, SPECIES_SHIELDON)
		msgbox (gText_NicknameThisPokemon, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			call (Common_EventScript_NameReceivedBoxMon)
		}
		call (Common_EventScript_TransferredToPC)
	} else {
		call (Common_EventScript_NoMoreRoomForPokemon)
	}
	call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
}

script Ardor_Uni_GeologyClass_EventScript_ChooseFossil {
	msgbox(Ardor_Uni_GeologyClass_Text_FossilYN, MSGBOX_YESNO)
	if (var(VAR_RESULT) == TRUE) {
		msgbox(Ardor_Uni_GeologyClass_Text_WhichFossil)
		multichoice (0, 0, MULTI_CHOOSE_FOSSIL, FALSE)
		switch (var(VAR_RESULT)) {
			//Helix
			case 0:
				checkitem (ITEM_HELIX_FOSSIL)
				if (var(VAR_RESULT) == TRUE) {
					call (Ardor_Uni_GeologyClass_EventScript_GiveHelix)
				} else {
					bufferitemname (STR_VAR_1, ITEM_HELIX_FOSSIL)
					msgbox (Ardor_Uni_GeologyClass_Text_NoFossil)
					closemessage
					call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
				}
			//Dome
			case 1:
				checkitem (ITEM_DOME_FOSSIL)
				if (var(VAR_RESULT) == TRUE) {
					call (Ardor_Uni_GeologyClass_EventScript_GiveDome)
				} else {
					bufferitemname (STR_VAR_1, ITEM_DOME_FOSSIL)
					msgbox (Ardor_Uni_GeologyClass_Text_NoFossil)
					closemessage
					call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
				}
			//Old Amber
			case 2:
				checkitem (ITEM_OLD_AMBER)
				if (var(VAR_RESULT) == TRUE) {
					call (Ardor_Uni_GeologyClass_EventScript_GiveOldAmber)
				} else {
					bufferitemname (STR_VAR_1, ITEM_OLD_AMBER)
					msgbox (Ardor_Uni_GeologyClass_Text_NoFossil)
					closemessage
					call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
				}
			//Root Fossil
			case 3:
				checkitem (ITEM_ROOT_FOSSIL)
				if (var(VAR_RESULT) == TRUE) {
					call (Ardor_Uni_GeologyClass_EventScript_GiveRoot)
				} else {
					bufferitemname (STR_VAR_1, ITEM_ROOT_FOSSIL)
					msgbox (Ardor_Uni_GeologyClass_Text_NoFossil)
					closemessage
					call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
				}
			//Claw Fossil
			case 4:
				checkitem (ITEM_CLAW_FOSSIL)
				if (var(VAR_RESULT) == TRUE) {
					call (Ardor_Uni_GeologyClass_EventScript_GiveClaw)
				} else {
					bufferitemname (STR_VAR_1, ITEM_CLAW_FOSSIL)
					msgbox (Ardor_Uni_GeologyClass_Text_NoFossil)
					closemessage
					call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
				}
			//Skull Fossil
			case 5:
				checkitem (ITEM_SKULL_FOSSIL)
				if (var(VAR_RESULT) == TRUE) {
					call (Ardor_Uni_GeologyClass_EventScript_GiveSkull)
				} else {
					bufferitemname (STR_VAR_1, ITEM_SKULL_FOSSIL)
					msgbox (Ardor_Uni_GeologyClass_Text_NoFossil)
					closemessage
					call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
				}
			//Armor Fossil
			case 6:
				checkitem (ITEM_ARMOR_FOSSIL)
				if (var(VAR_RESULT) == TRUE) {
					call (Ardor_Uni_GeologyClass_EventScript_GiveArmor)
				} else {
					bufferitemname (STR_VAR_1, ITEM_ARMOR_FOSSIL)
					msgbox (Ardor_Uni_GeologyClass_Text_NoFossil)
					closemessage
					call (Ardor_Uni_GeologyClass_EventScript_ChooseFossil)
				}
			default:
				call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
		}
	}
	call (Ardor_Uni_GeologyClass_EventScript_MachineEnd)
}

script Ardor_Uni_GeologyClass_EventScript_Teacher  {
	lock
	faceplayer
	if (defeated(TRAINER_UNI_GEOLOGY)) {
		msgbox(Ardor_Uni_GeologyClass_Text_ClassFinished)
		closemessage
	} elif (flag(FLAG_GEOLOGY_INTRO)) {
		//check if todo list is done
		specialvar (VAR_RESULT, IsRockTypeInParty)
		if (var(VAR_RESULT) == TRUE) {
			setflag (FLAG_TEMP_1)
		} else {
			msgbox(Ardor_Uni_GeologyClass_Text_BringRockType)
			closemessage
		}
		specialvar (VAR_RESULT, IsGroundTypeInParty)
		if (var(VAR_RESULT) == TRUE) {
			setflag (FLAG_TEMP_2)
		} else {
			msgbox(Ardor_Uni_GeologyClass_Text_BringGroundType)
			closemessage
		}
		if (flag(FLAG_TEMP_1) && (flag(FLAG_TEMP_2))) {
			call (Ardor_Uni_GeologyClass_EventScript_Test)
		}
	} else {
		call (Ardor_Uni_GeologyClass_EventScript_ClassIntro)
	}
	applymovement (OBJ_EVENT_TEACHER, Common_Movement_FaceDown)
	waitmovement (0)
	release
	end
}

script Ardor_Uni_GeologyClass_EventScript_ClassIntro {
	setflag (FLAG_GEOLOGY_INTRO)
	msgbox(Ardor_Uni_GeologyClass_Text_ClassIntro)
	closemessage
	msgbox(Ardor_Uni_GeologyClass_Text_BringRockType)
	closemessage
	msgbox(Ardor_Uni_GeologyClass_Text_BringGroundType)
	closemessage
	return
}

script Ardor_Uni_GeologyClass_EventScript_Test {
	//You have brought rock and earth now time for test
	msgbox(Ardor_Uni_GeologyClass_Text_Test)
	closemessage
	msgbox(Ardor_Uni_Text_TestIntro)
	closemessage
	trainerbattle_no_intro(TRAINER_UNI_GEOLOGY, Ardor_Uni_GeologyClass_Text_TeacherBattleLost)
	call (Ardor_Uni_TermState_Incrementvar)
	msgbox(Ardor_Uni_GeologyClass_Text_ClassFinished)
	closemessage
	return
}

text Ardor_Uni_Text_TestIntro {
	format("Tempus iam est examinis.")
}

text Ardor_Uni_GeologyClass_Text_FossilMachine {
	format("It's a machine used to ressurect fossil {PKMN}.")
}

text Ardor_Uni_GeologyClass_Text_NextTime {
	format("Better come back later with more fossils to ressurect.")
}

text Ardor_Uni_GeologyClass_Text_FossilYN {
	format("Will you put a fossil into the machine?")
}

text Ardor_Uni_GeologyClass_Text_GiveFossil {
	format("{PLAYER} put the {STR_VAR_1} into the machine.")
}

text Ardor_Uni_GeologyClass_Text_ObtainedPokemon {
	format("{PLAYER} received {STR_VAR_2} from the machine.")
}

text Ardor_Uni_GeologyClass_Text_NoFossil {
	format("{PLAYER} does not have any {STR_VAR_1}!")
}

text Ardor_Uni_GeologyClass_Text_WhichFossil {
	format("Which type of fossil will you put into the machine?")
}

text Ardor_Uni_GeologyClass_Text_ClassFinished {
	format("Congratulatio! Iam studuisti Geologiam. Usa machinam quando volas.")
}

text Ardor_Uni_GeologyClass_Text_TeacherBattleLost {
	format("Lapides tui superiores sunt.")
}

text Ardor_Uni_GeologyClass_Text_Test {
	format("Revenisti cum monstro lapidis et monstro telluris!")
}

text Ardor_Uni_GeologyClass_Text_BringGroundType {
	format("Reveni cum monstro telluris.")
}

text Ardor_Uni_GeologyClass_Text_BringRockType {
	format("Reveni cum monstro lapidis.")
}

text Ardor_Uni_GeologyClass_Text_ClassIntro {
	format("Salve puer. Magister Patricius sum. Necesse est tibi docere scientiam geologiae. Geologia studium est lapidum et tellurum.")
}


