
//used in all games
const WAGER = VAR_TEMP_0
const WAGER_REFUND = FLAG_TEMP_2 //when set give refund in End script

//Blue Roulette vars
const WAGER_TYPE = VAR_TEMP_1
const WAGER_NUMBER = VAR_TEMP_2 //Specific number chosen to wager on 0-30 all match. 31 is 00
const WAGER_RANGE = VAR_TEMP_3 //Specific Range on a range wager
const WAGER_COLOR = VAR_TEMP_4 //Specific color on a color wager
const SPIN_RESULT = VAR_TEMP_5

const OBJ_EVENT_BRDEALER1 = 4
const OBJ_EVENT_BRDEALER2 = 3

mapscripts Peccadum_PalatiumFelix_MapScripts {}



script Peccadum_PalatiumFelix_Script_BlueRouletteDealer {
    lock
    faceplayer
    //Hello I am the roulette dealer
    msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteDealerIntro)
    //if broke tell you to get coins
    checkcoins (VAR_TEMP_1)
    if (var(VAR_TEMP_1) < 5) {
        msgbox (Peccadum_PalatiumFelix_Text_NoCoins)
        call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
    }
    //wanna play?
    msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteDealerBegin, MSGBOX_YESNO)
    if (var(VAR_RESULT) == FALSE) {
        call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
    } else {
        call (Peccadum_PalatiumFelix_Script_BlueRouletteBrain)
    }
}

script Peccadum_PalatiumFelix_Script_BlueRouletteBrain {
    //How much will you wager
    call (Peccadum_PalatiumFelix_Script_GetCoinWager)
    //What type of wager (Num, color, range)
	call (Peccadum_PalatiumFelix_Script_BlueRouletteGetWagerType)
    //Confirm type and select specific wager (which num, which color, what range)
	switch (var(WAGER_TYPE)) {
		case 0:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetNumberWager)
		case 1:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager)
		case 2:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
		case 3:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
		default:
			msgbox ("ERROR\nWAGER_TYPE OOB")
			closemessage
			release
			end
	}
    //good luck
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGoodLuck)
	closemessage
	//clear wager refund - wager is commited
	clearflag (WAGER_REFUND)
	applymovement (VAR_LAST_TALKED, Common_Movement_FaceDown)
	waitmovement (0)
	playse (SE_ROULETTE_BALL)
	waitse
    //spin - should have something fun happen here, SE, a nice graphic idk
	specialvar (SPIN_RESULT, BlueRouletteSpin)
	playse (SE_ROULETTE_BALL2)
	waitse
    //announce spin
	applymovement (VAR_LAST_TALKED, Common_Movement_ExclamationMark)
	waitmovement (0)
	buffernumberstring (STR_VAR_1, SPIN_RESULT)
	if (var(SPIN_RESULT) < 31) {
		msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteAnnounceSpin)
	} else {
		msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteAnnounce00)
	}
	faceplayer
    //check if win or lose
	call (Peccadum_PalatiumFelix_Script_BlueRouletteCheckWin)
	//rest handled from Win or Lose 
}

script Peccadum_PalatiumFelix_Script_GetCoinWager {
	//set wager refund
	if (!flag(WAGER_REFUND)) {
		setflag (WAGER_REFUND)
	}
    //reset wager
	setvar (WAGER, 0)
    //show coin box
	showcoinsbox (21, 1)
    //msgbox What is your wager?
	msgbox (SaltySpitoon_Text_HiLoKabuto_GetWager)
    closemessage
    multichoice (0, 0, MULTI_GET_COIN_WAGER, TRUE)
    copyvar (WAGER, VAR_RESULT)
	checkcoins (VAR_RESULT)
    switch (var(WAGER)) {
		//0: 5
		case 0:
			if (var(VAR_RESULT) >= 5) {
				removecoins (5)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 5)
				return
			} else {
				clearflag (WAGER_REFUND)
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
			}
		//1: 25
		case 1:
			if (var(VAR_RESULT) >= 25) {
				removecoins (25)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 25)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		//2: 100
		case 2:
			if (var(VAR_RESULT) >= 100) {
				removecoins (100)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 100)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		//3: 500
		case 3:
			if (var(VAR_RESULT) >= 500) {
				removecoins (500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 500)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		//4: 1000
		case 4:
			if (var(VAR_RESULT) >= 1000) {
				removecoins (1000)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 1000)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		//5: 2500
		case 5:
			if (var(VAR_RESULT) >= 2500) {
				removecoins (2500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
				setvar (WAGER, 2500)
				return
			} else {
				hidecoinsbox (21, 1)
				msgbox (SaltySpitoon_Text_HiLoKabuto_WagerPoor)
				call (Peccadum_PalatiumFelix_Script_GetCoinWager)
			}
		case 6:
			clearflag (WAGER_REFUND)
			hidecoinsbox (21, 1)
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
	}
	msgbox("ERROR\nBottom of GetCoinWager")
	closemessage
	release
	end
}

script Peccadum_PalatiumFelix_Script_BlueRouletteGetWagerType {
	//reset wager type
	setvar (WAGER_TYPE, 0)
	//msgbox What type of wager will you be making
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGetWagerType)
	closemessage
	multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_WAGER_TYPE, TRUE)
	copyvar (WAGER_TYPE, VAR_RESULT)
	//confirm wager type or exit on NVM
	switch (var(WAGER_TYPE)) {
		//Num
		case 0:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmNumberWager, MSGBOX_YESNO)
		//Color
		case 1:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorWager, MSGBOX_YESNO)
		//Range
		case 2:	
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRangeWager, MSGBOX_YESNO)
		//NVM
		case 3:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
	}
	if (var(VAR_RESULT) == YES) {
			return
		} else {
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetWagerType)
		}
}

script Peccadum_PalatiumFelix_Script_BlueRouletteGetNumberWager {
	//reset range wager
	setvar (WAGER_RANGE, 0)
	//reset number wager
	setvar (WAGER_NUMBER, 0)
	//what number will you bet - Tell us where 0 and 00 are plsa
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGetNumberWager)
	closemessage
	//Determine Range (0-00), (1-10), (11-20), (21-31), NVM
	multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_WAGER_RANGE, TRUE)
	copyvar (WAGER_RANGE, VAR_RESULT)
	msgbox ("SPECIFIC NUM")
	closemessage
	//Then secondary multi (selection within the range you just selected) - assign WAGER_NUMBER based on selection and range
	switch (var(WAGER_RANGE)) {
		//0 et 00
		case 0:
			multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_RANGE_0_NUMBER, TRUE)
			switch (var(VAR_RESULT)) {
				case 0 :
					setvar (WAGER_NUMBER, 0)
				case 1:
					setvar (WAGER_NUMBER, 31)
				case 2:
					call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
				default:
					msgbox ("ERROR\nOOB return from\nROULETTE_RANGE_0_NUMBER")
					closemessage
					release
					end
			}
		//1 - 10
		case 1:
			msgbox ("CASE 1")
			closemessage
			setvar (VAR_0x8004, SCROLL_MULTI_GET_BLUE_ROULETTE_RANGE_1_NUMBER)
			special (ShowScrollableMultichoice)
			waitstate
			switch (var(VAR_RESULT)) {
				case 0 :
					setvar (WAGER_NUMBER, 1)
				case 1:
					setvar (WAGER_NUMBER, 2)
				case 2:
					setvar (WAGER_NUMBER, 3)
				case 3:
					setvar (WAGER_NUMBER, 4)
				case 4:
					setvar (WAGER_NUMBER, 5)
				case 5:
					setvar (WAGER_NUMBER, 6)
				case 6:
					setvar (WAGER_NUMBER, 7)
				case 7:
					setvar (WAGER_NUMBER, 8)
				case 8:
					setvar (WAGER_NUMBER, 9)
				case 9:
					setvar (WAGER_NUMBER, 10)
				case 10:
					call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
				default:
					msgbox ("ERROR\nOOB return from\nROULETTE_RANGE_1_NUMBER")
					closemessage
					release
					end
			}
		//11 - 20
		case 2:
			setvar (VAR_0x8004, SCROLL_MULTI_GET_BLUE_ROULETTE_RANGE_2_NUMBER)
			special (ShowScrollableMultichoice)
			waitstate
			switch (var(VAR_RESULT)) {
				case 0 :
					setvar (WAGER_NUMBER, 11)
				case 1:
					setvar (WAGER_NUMBER, 12)
				case 2:
					setvar (WAGER_NUMBER, 13)
				case 3:
					setvar (WAGER_NUMBER, 14)
				case 4:
					setvar (WAGER_NUMBER, 15)
				case 5:
					setvar (WAGER_NUMBER, 16)
				case 6:
					setvar (WAGER_NUMBER, 17)
				case 7:
					setvar (WAGER_NUMBER, 18)
				case 8:
					setvar (WAGER_NUMBER, 19)
				case 9:
					setvar (WAGER_NUMBER, 20)
				case 10:
					call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
				default:
					msgbox ("ERROR\nOOB return from\nROULETTE_RANGE_2_NUMBER")
					closemessage
					release
					end
			}
		//21 - 30
		case 3:
			setvar (VAR_0x8004, SCROLL_MULTI_GET_BLUE_ROULETTE_RANGE_3_NUMBER)
			special (ShowScrollableMultichoice)
			waitstate
			switch (var(VAR_RESULT)) {
				case 0 :
					setvar (WAGER_NUMBER, 21)
				case 1:
					setvar (WAGER_NUMBER, 22)
				case 2:
					setvar (WAGER_NUMBER, 23)
				case 3:
					setvar (WAGER_NUMBER, 24)
				case 4:
					setvar (WAGER_NUMBER, 25)
				case 5:
					setvar (WAGER_NUMBER, 26)
				case 6:
					setvar (WAGER_NUMBER, 27)
				case 7:
					setvar (WAGER_NUMBER, 28)
				case 8:
					setvar (WAGER_NUMBER, 29)
				case 9:
					setvar (WAGER_NUMBER, 30)
				case 10:
					call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
				default:
					msgbox ("ERROR\nOOB return from\nROULETTE_RANGE_2_NUMBER")
					closemessage
					release
					end
			}
		//nvm
		case 4:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
		default:
			msgbox ("ERROR\nWAGER_RANGE OOB in\nGetNumberWager")
			closemessage
			release
			end
	}
	//confirm selection
	buffernumberstring (STR_VAR_1, WAGER_NUMBER)
	if (var(WAGER_NUMBER) < 31) {
		msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmWagerNumber, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			return
		} else {
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetNumberWager)
		}
	} else {
		msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmWager00, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
			return
		} else {
			call (Peccadum_PalatiumFelix_Script_BlueRouletteGetNumberWager)
		}
	}
}

script Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager {
	//reset color wager
	setvar (WAGER_COLOR, 0)
	//what color will you bet 
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGetColorWager)
	closemessage
	//Determine color, NVM
	multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_WAGER_COLOR, TRUE)
	copyvar (WAGER_COLOR, VAR_RESULT)
	//confirm selection
	switch (var(WAGER_COLOR)) {
		//red
		case 0:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorRed, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager)
			}
		//blue
		case 1:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorBlue, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager)
			}
		//green
		case 2:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorGreen, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetColorWager)
			}
		//nvm
		case 3:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
		default:
			msgbox("ERROR\nWAGER_COLOR OOB")
			closemessage
			release
			end
	}
}

script Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager {
	//reset range wager
	setvar (WAGER_RANGE, 0)
	//msg what range will you bet
	msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteGetRangeWager)
	closemessage
	//multi determine range
	multichoice (0, 0, MULTI_GET_BLUE_ROULETTE_WAGER_RANGE, TRUE)
	//confirm range
	copyvar (WAGER_RANGE, VAR_RESULT)
	switch (var(WAGER_RANGE)) {
		//0 et 00
		case 0:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange0, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
			}
		//1 - 10
		case 1:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange1, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
			}
		//11 - 20
		case 2:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange2, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
			}
		//21 - 30
		case 3:
			msgbox (Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange3, MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				return
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRouletteGetRangeWager)
			}
		//nvm
		case 4:
			call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
		default:
			msgbox ("ERROR\nWAGER_RANGE OOB")
			closemessage
			release
			end
	}
}

script Peccadum_PalatiumFelix_Script_BlueRouletteCheckWin {
	//switch on wager type
	switch (var(WAGER_TYPE)) {
		//number
		case 0:
			if (var(SPIN_RESULT) == WAGER_NUMBER) {
				call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
			} else {
				call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
			}
		//color
		case 1:
			switch (var(WAGER_COLOR)) {
				//red
				case 0:
					if     (var(SPIN_RESULT) == 2 || var(SPIN_RESULT) == 4 || var(SPIN_RESULT) == 6 || var(SPIN_RESULT) == 8 ||
							var(SPIN_RESULT) == 10 || var(SPIN_RESULT) == 12 || var(SPIN_RESULT) == 14 || var(SPIN_RESULT) == 16 || var(SPIN_RESULT) == 18 ||
							var(SPIN_RESULT) == 20 || var(SPIN_RESULT) == 22 || var(SPIN_RESULT) == 24 || var(SPIN_RESULT) == 26 || var(SPIN_RESULT) == 28 ||
							var(SPIN_RESULT) == 30) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//blue
				case 1:
					if     (var(SPIN_RESULT) == 1 || var(SPIN_RESULT) == 3 || var(SPIN_RESULT) == 5 || var(SPIN_RESULT) == 7 ||
							var(SPIN_RESULT) == 9 || var(SPIN_RESULT) == 11 || var(SPIN_RESULT) == 13 || var(SPIN_RESULT) == 15 || var(SPIN_RESULT) == 17 ||
							var(SPIN_RESULT) == 19 || var(SPIN_RESULT) == 21 || var(SPIN_RESULT) == 23 || var(SPIN_RESULT) == 25 || var(SPIN_RESULT) == 27 ||
							var(SPIN_RESULT) == 29) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//green
				case 2:
					if (var(SPIN_RESULT) == 0 || var(SPIN_RESULT) == 31) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				default:
					msgbox ("ERROR\nWAGER_COLOR OOB in CheckWin")
					closemessage
					release
					end
			}
		//range
		case 2:
			switch (var(WAGER_RANGE)) {
				//0 et 00
				case 0:
					if (var(SPIN_RESULT) == 0 || var(SPIN_RESULT) == 31) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//1 - 10
				case 1:
					if (var(SPIN_RESULT) > 0 && var(SPIN_RESULT) < 11) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//11 - 20
				case 2:
					if (var(SPIN_RESULT) > 10 && var(SPIN_RESULT) < 11) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				//21 - 30
				case 3:
					if (var(SPIN_RESULT) > 20 && var(SPIN_RESULT) < 31) {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin)
					} else {
						call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose)
					}
				default:
					msgbox ("ERROR\nWAGER_RANGE OOB in CheckWin")
					closemessage
					release
					end
			}
		default:
			msgbox ("ERROR\nWAGER_TYPE OOB in CheckWin")
			closemessage
			release
			end
	}
}

script Peccadum_PalatiumFelix_Script_BlueRoulettePlayerWin {
	showcoinsbox (21, 1)
	msgbox (Peccadum_PalatiumFelix_Text_BlueRoulettePlayerWin)
	closemessage
	//do payout stuff
	switch (var(WAGER_TYPE)) {
		//number
		case 0:
			if (var(WAGER) <  500) {
				multvar (WAGER, 30)
			} else {
				setvar (WAGER, 9999)
			}
		//color
		case 1:
			//red or blue
			if (var(WAGER) !=  2) {
				multvar (WAGER, 2)
			//green
			} else {
				if (var(WAGER) <  100) {
					multvar (WAGER, 15)
				} else {
					setvar (WAGER, 9999)
				}
			}
		//range
		case 2:
			//normal ranges
			if (var(WAGER) !=  0) {
				multvar (WAGER, 3)
			//green
			} else {
				if (var(WAGER) <  100) {
					multvar (WAGER, 15)
				} else {
					setvar (WAGER, 9999)
				}
			}
		default:
			hidecoinsbox (21, 1)
			msgbox ("ERROR\nWAGER_TYPE OOB in PlayerWin")
			closemessage
			release
			end
	}
	addcoins (WAGER)
	updatecoinsbox (21, 1)
	playse (SE_SHOP)
	waitse
	hidecoinsbox (21,1)
	call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayAgain)
}

script Peccadum_PalatiumFelix_Script_BlueRoulettePlayerLose {
	msgbox (Peccadum_PalatiumFelix_Text_BlueRoulettePlayerLose)
	call (Peccadum_PalatiumFelix_Script_BlueRoulettePlayAgain)
}

script Peccadum_PalatiumFelix_Script_BlueRoulettePlayAgain {
	msgbox(Peccadum_PalatiumFelix_Text_BlueRoulettePlayAgain, MSGBOX_YESNO)
		if (var(VAR_RESULT) == YES) {
        call (Peccadum_PalatiumFelix_Script_BlueRouletteBrain)
    } else {
		call (Peccadum_PalatiumFelix_Script_BlueRouletteEnd)
    }
}

script Peccadum_PalatiumFelix_Script_BlueRouletteEnd  {
	if (flag(WAGER_REFUND)) {
		showcoinsbox (21, 1)
		msgbox (CasinoDealer_Text_Refund)
		switch (var(WAGER)) {
			case 5:	
				addcoins (5)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 25:	
				addcoins (25)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 100:	
				addcoins (100)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 500:	
				addcoins (500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 1000:	
				addcoins (1000)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			case 2500:
				addcoins (2500)
				updatecoinsbox (21, 1)
				playse (SE_SHOP)
				waitse
				hidecoinsbox (21, 1)
			default:
				msgbox("ERROR\nWAGER OOB in RefundSwitch")
				closemessage
				release
				end
		}
	}	
    //see you again
    msgbox (CasinoDealer_Text_Bye)
    //face dealer(s) down
    applymovement (OBJ_EVENT_BRDEALER1, Common_Movement_FaceDown)
    applymovement (OBJ_EVENT_BRDEALER2, Common_Movement_FaceDown)
    waitmovement (0)
    closemessage
    release
    end
}
    
text Peccadum_PalatiumFelix_Text_BlueRouletteDealerIntro {
    format("I am the Blue Roulette table dealer.")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteDealerBegin {
    format("Would you like to play a game of roulette?")
}

text Peccadum_PalatiumFelix_Text_NoCoins {
    format("Excuse me sir, but coins are required to play games at Palatium Felix. Please speak with the cashier to purchase more.")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGetWagerType {
	format("What kind of wager will you be placing?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmNumberWager {
	format("A wager on a winning number pays thirty to one. Are you sure that you will place a wager on a single number?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorWager {
	format("The payout for a wager on color depends on which color you wager on. Both {COLOR RED}red {COLOR DARK_GRAY}and {COLOR BLUE}blue {COLOR DARK_GRAY}pay out at two to one while {COLOR GREEN}green {COLOR DARK_GRAY}pays out higher, fifteen to one. Are you sure that you will bet on color?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRangeWager {
	format("A winning bet on range pays three to one, except for zero and double zero which pays the same as {COLOR GREEN}green{COLOR DARK_GRAY}, fifteen to one. Are you sure you want to wager on range?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGetNumberWager {
	format("There are thirty two individual spaces on the roulette wheel: numbers from one to thirty, single, and double nil. Which number will you be wagering on?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGetRangeWager {
	format("Which range of numbers will you wager on?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGetColorWager {
	format("Which color will you be wagering on?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorRed {
	format("You have chosen to wager color {COLOR RED}red{COLOR DARK_GRAY}. This wager will payout at two to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorBlue {
	format("You have chosen to wager color {COLOR BLUE}blue{COLOR DARK_GRAY}. This wager will payout at two to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmColorGreen {
	format("You have chosen to wager color {COLOR GREEN}green{COLOR DARK_GRAY}. This wager will payout fifteen to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange0 {
	format("You have chosen to wager on the range of zero and double zero. This will payout fifteen to one. Are you certain?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange1 {
	format("You have chosen to wager on the range of numbers one through ten. This will payout at three to one. Will you confirm this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange2 {
	format("You have chosen to wager on the range eleven through twenty. This will payout at three to one. Will you confirm this bet? ")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmRange3 {
	format("You have chosen to wager on the range of numbers from twenty one through thirty. The payout for this bet is three to one. Are you certain you want to place this bet?")
}

text CasinoDealer_Text_Refund {
	format("Here are the unwagered coins back for you.")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmWagerNumber {
	format("You have chosen to wager on {STR_VAR_1}. The payout will be at thirty to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteConfirmWager00 {
	format("You have chosen to bet double zero. The payout will be at thirty to one. Are you certain you want to place this bet?")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteGoodLuck {
	format("Rien ne va plus! No more bets! Sir, good luck!")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteAnnounceSpin {
	format("The result of this spin is {STR_VAR_1}!")
}

text Peccadum_PalatiumFelix_Text_BlueRouletteAnnounce00 {
	format("The result of the spin: double zero!")
}

text Peccadum_PalatiumFelix_Text_BlueRoulettePlayerWin {
	format("Congratulations {PLAYER}! You won your bet!")
}

text Peccadum_PalatiumFelix_Text_BlueRoulettePlayerLose {
	format("I'm sorry but you did not win your bet.")
}

text Peccadum_PalatiumFelix_Text_BlueRoulettePlayAgain {
	format("Would you like to bet on roulette again?")
}
